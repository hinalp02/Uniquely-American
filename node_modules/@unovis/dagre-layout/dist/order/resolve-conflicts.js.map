{"version":3,"file":"resolve-conflicts.js","sources":["../../lib/order/resolve-conflicts.js"],"sourcesContent":["import _pick from 'lodash-es/pick'\nimport _map from 'lodash-es/map'\nimport _filter from 'lodash-es/filter'\nimport _isUndefined from 'lodash-es/isUndefined'\nimport _forEach from 'lodash-es/forEach'\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts (entries, cg) {\n  const mappedEntries = {}\n\n  _forEach(entries, function (entry, i) {\n    const tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      'in': [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    }\n\n    if (!_isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter\n      tmp.weight = entry.weight\n    }\n  })\n\n  _forEach(cg.edges(), function (e) {\n    const entryV = mappedEntries[e.v]\n    const entryW = mappedEntries[e.w]\n\n    if (!_isUndefined(entryV) && !_isUndefined(entryW)) {\n      entryW.indegree++\n      entryV.out.push(mappedEntries[e.w])\n    }\n  })\n\n  const sourceSet = _filter(mappedEntries, function (entry) {\n    return !entry.indegree\n  })\n\n  return doResolveConflicts(sourceSet)\n}\n\nfunction doResolveConflicts (sourceSet) {\n  const entries = []\n\n  function handleIn (vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return\n      }\n\n      if (_isUndefined(uEntry.barycenter) || _isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry)\n      }\n    }\n  }\n\n  function handleOut (vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry)\n\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry)\n      }\n    }\n  }\n\n  while (sourceSet.length) {\n    const entry = sourceSet.pop()\n    entries.push(entry)\n\n    _forEach(entry['in'].reverse(), handleIn(entry))\n\n    _forEach(entry.out, handleOut(entry))\n  }\n\n  const entriesFiltered = _filter(entries, function (entry) {\n    return !entry.merged\n  })\n\n  return _map(entriesFiltered, function (entry) {\n    return _pick(entry, ['vs', 'i', 'barycenter', 'weight'])\n  })\n}\n\nfunction mergeEntries (target, source) {\n  let sum = 0\n  let weight = 0\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight\n    weight += target.weight\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight\n    weight += source.weight\n  }\n\n  target.vs = source.vs.concat(target.vs)\n  target.barycenter = sum / weight\n  target.weight = weight\n  target.i = Math.min(source.i, target.i)\n  source.merged = true\n}\n\nexport default resolveConflicts\n"],"names":[],"mappings":"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"}