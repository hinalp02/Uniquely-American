{"version":3,"file":"index.js","sources":["../../lib/order/index.js"],"sourcesContent":["import _forEach from 'lodash-es/forEach'\nimport _map from 'lodash-es/map'\nimport _cloneDeep from 'lodash-es/cloneDeep'\nimport _range from 'lodash-es/range'\nimport { Graph } from '@unovis/graphlibrary'\nimport initOrder from './init-order'\nimport crossCount from './cross-count'\nimport sortSubgraph from './sort-subgraph'\nimport buildLayerGraph from './build-layer-graph'\nimport addSubgraphConstraints from './add-subgraph-constraints'\nimport util from '../util'\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\n\nfunction order (g) {\n  const maxRank = util.maxRank(g)\n  const downLayerGraphs = buildLayerGraphs(g, _range(1, maxRank + 1), 'inEdges')\n  const upLayerGraphs = buildLayerGraphs(g, _range(maxRank - 1, -1, -1), 'outEdges')\n  let layering = initOrder(g)\n  assignOrder(g, layering)\n  let bestCC = Number.POSITIVE_INFINITY\n  let best\n\n  for (let i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2)\n    layering = util.buildLayerMatrix(g)\n    const cc = crossCount(g, layering)\n\n    if (cc < bestCC) {\n      lastBest = 0\n      best = _cloneDeep(layering)\n      bestCC = cc\n    }\n  }\n\n  assignOrder(g, best)\n}\n\nfunction buildLayerGraphs (g, ranks, relationship) {\n  return _map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship)\n  })\n}\n\nfunction sweepLayerGraphs (layerGraphs, biasRight) {\n  const cg = new Graph()\n\n  _forEach(layerGraphs, function (lg) {\n    const root = lg.graph().root\n    const sorted = sortSubgraph(lg, root, cg, biasRight)\n\n    _forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i\n    })\n\n    addSubgraphConstraints(lg, cg, sorted.vs)\n  })\n}\n\nfunction assignOrder (g, layering) {\n  _forEach(layering, function (layer) {\n    _forEach(layer, function (v, i) {\n      g.node(v).order = i\n    })\n  })\n}\n\nexport default order\n"],"names":[],"mappings":"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"}