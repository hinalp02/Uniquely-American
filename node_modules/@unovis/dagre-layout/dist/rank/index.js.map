{"version":3,"file":"index.js","sources":["../../lib/rank/index.js"],"sourcesContent":["import { longestPath } from './util'\nimport feasibleTree from './feasible-tree'\nimport networkSimplex from './network-simplex'\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\n\nfunction rank (g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g)\n      break\n\n    case 'tight-tree':\n      tightTreeRanker(g)\n      break\n\n    case 'longest-path':\n      longestPathRanker(g)\n      break\n\n    default:\n      networkSimplexRanker(g)\n  }\n} // A fast and simple ranker, but results are far from optimal.\n\nconst longestPathRanker = longestPath\n\nfunction tightTreeRanker (g) {\n  longestPath(g)\n  feasibleTree(g)\n}\n\nfunction networkSimplexRanker (g) {\n  networkSimplex(g)\n}\n\nexport default rank\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,EAAE,CAAC,EAAE;AAClB,EAAE,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM;AAC1B,IAAI,KAAK,iBAAiB;AAC1B,MAAM,oBAAoB,CAAC,CAAC,EAAC;AAC7B,MAAM,KAAK;AACX;AACA,IAAI,KAAK,YAAY;AACrB,MAAM,eAAe,CAAC,CAAC,EAAC;AACxB,MAAM,KAAK;AACX;AACA,IAAI,KAAK,cAAc;AACvB,MAAM,iBAAiB,CAAC,CAAC,EAAC;AAC1B,MAAM,KAAK;AACX;AACA,IAAI;AACJ,MAAM,oBAAoB,CAAC,CAAC,EAAC;AAC7B,GAAG;AACH,CAAC;AACD;AACA,MAAM,iBAAiB,GAAG,YAAW;AACrC;AACA,SAAS,eAAe,EAAE,CAAC,EAAE;AAC7B,EAAE,WAAW,CAAC,CAAC,EAAC;AAChB,EAAE,YAAY,CAAC,CAAC,EAAC;AACjB,CAAC;AACD;AACA,SAAS,oBAAoB,EAAE,CAAC,EAAE;AAClC,EAAE,cAAc,CAAC,CAAC,EAAC;AACnB;;;;"}