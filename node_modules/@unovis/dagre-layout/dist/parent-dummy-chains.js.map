{"version":3,"file":"parent-dummy-chains.js","sources":["../lib/parent-dummy-chains.js"],"sourcesContent":["import _forEach from 'lodash-es/forEach'\n\nfunction parentDummyChains (g) {\n  const postorderNums = postorder(g)\n\n  _forEach(g.graph().dummyChains, function (v) {\n    let node = g.node(v)\n    const edgeObj = node.edgeObj\n    const pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w)\n    const path = pathData.path\n    const lca = pathData.lca\n    let pathIdx = 0\n    let pathV = path[pathIdx]\n    let ascending = true\n\n    while (v !== edgeObj.w) {\n      node = g.node(v)\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++\n        }\n\n        if (pathV === lca) {\n          ascending = false\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++\n        }\n\n        pathV = path[pathIdx]\n      }\n\n      g.setParent(v, pathV)\n      v = g.successors(v)[0]\n    }\n  })\n} // Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\n\nfunction findPath (g, postorderNums, v, w) {\n  const vPath = []\n  const wPath = []\n  const low = Math.min(postorderNums[v].low, postorderNums[w].low)\n  const lim = Math.max(postorderNums[v].lim, postorderNums[w].lim)\n  let parent\n  let lca // Traverse up from v to find the LCA\n\n  parent = v\n\n  do {\n    parent = g.parent(parent)\n    vPath.push(parent)\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim))\n\n  lca = parent // Traverse from w to LCA\n\n  parent = w\n\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent)\n  }\n\n  return {\n    path: vPath.concat(wPath.reverse()),\n    lca: lca\n  }\n}\n\nfunction postorder (g) {\n  const result = {}\n  let lim = 0\n\n  function dfs (v) {\n    const low = lim\n\n    _forEach(g.children(v), dfs)\n\n    result[v] = {\n      low: low,\n      lim: lim++\n    }\n  }\n\n  _forEach(g.children(), dfs)\n\n  return result\n}\n\nexport default parentDummyChains\n"],"names":[],"mappings":"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"}