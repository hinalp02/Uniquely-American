{"version":3,"file":"config.js","sources":["../../../src/components/sankey/config.ts"],"sourcesContent":["// Config\nimport { ComponentConfigInterface, ComponentDefaultConfig } from 'core/component/config'\n\n// Utils\nimport { getNumber } from 'utils/data'\n\n// Types\nimport { ColorAccessor, GenericAccessor, NumericAccessor, StringAccessor } from 'types/accessor'\nimport { TrimMode, VerticalAlign, FitMode } from 'types/text'\nimport { Position } from 'types/position'\nimport {\n  SankeyInputLink,\n  SankeyInputNode,\n  SankeyNodeAlign,\n  SankeySubLabelPlacement,\n  SankeyExitTransitionType,\n  SankeyEnterTransitionType,\n  SankeyLink,\n  SankeyNode,\n} from './types'\n\nexport interface SankeyConfigInterface<N extends SankeyInputNode, L extends SankeyInputLink> extends ComponentConfigInterface {\n  // General\n  /** Node / Link id accessor function. Used for mapping of data updates to corresponding SVG objects. Default: `(d, i) => d.id ?? i.toString()` */\n  id?: (d: SankeyInputNode | SankeyInputLink, i: number, ...any: unknown[]) => string;\n  /** Coefficient to scale the height of the diagram when the amount of links is low: `C * links.length`, clamped to `[height / 2, height]`. Default: `1/16` */\n  heightNormalizationCoeff?: number;\n  /** Type of animation on removing nodes. Default: `ExitTransitionType.Default` */\n  exitTransitionType?: SankeyExitTransitionType;\n  /** Type of animation on creating nodes. Default: `EnterTransitionType.Default` */\n  enterTransitionType?: SankeyEnterTransitionType;\n  /** Highlight the corresponding subtree on node / link hover. Default: `false` */\n  highlightSubtreeOnHover?: boolean;\n  /** Highlight animation duration, ms. Default: `400` */\n  highlightDuration?: number;\n  /** Highlight delay, ms. Default: `1000` */\n  highlightDelay?: number;\n  /** Sankey algorithm iterations. Default: `32` */\n  iterations?: number;\n\n  // Sorting\n  /** Sankey node sorting function. Default: `undefined`.\n   *  Node sorting is applied to nodes in one layer (column). Layer by layer.\n   *  Options: `undefined` - the order is determined by the layout;\n   *           `null` - the order is fixed by the input;\n   *           sort function - the order is determined by the function.\n  */\n  nodeSort?: ((node1: SankeyNode<N, L>, node2: SankeyNode<N, L>) => number) | null | undefined;\n  /** Sankey link sorting function. Default: `(link2, link1) => link1.value - link2.value`.\n   *  Link sorting is applied to the source (exiting) links within one node.\n   *  Options: `undefined` - the order is determined by the layout;\n   *           `null` - the order is fixed by the input;\n   *           sort function - the order is determined by the function.\n  */\n  linkSort?: ((link1: SankeyLink<N, L>, link2: SankeyLink<N, L>) => number) | null | undefined;\n\n  // Nodes\n  /** Sankey node width in pixels */\n  nodeWidth?: number;\n  /** Sankey node alignment method */\n  nodeAlign?: SankeyNodeAlign;\n  /** Horizontal space between the nodes. Extended Sizing property only. Default: `150` */\n  nodeHorizontalSpacing?: number;\n  /** Minimum node height. Extended Sizing property only. Default: `20` */\n  nodeMinHeight?: number;\n  /** Maximum node height. Extended Sizing property only. Default: `100` */\n  nodeMaxHeight?: number;\n  /** Sankey vertical separation between nodes in pixels. Default: `2` */\n  nodePadding?: number;\n  /** Display the graph when data has just one element */\n  showSingleNode?: boolean;\n  /** Node cursor on hover. Default: `undefined` */\n  nodeCursor?: StringAccessor<SankeyNode<N, L>>;\n  /** Node icon accessor function or value. Default: `undefined` */\n  nodeIcon?: StringAccessor<SankeyNode<N, L>>;\n  /** Node color accessor function or value. Default: `undefined` */\n  nodeColor?: ColorAccessor<SankeyNode<N, L>>;\n  /** Node `fixedValue` accessor function or constant. It defines the node value that will be used to calculate\n   * the height of the nodes by d3-sankey (by default the height will be based on aggregated `linkValue`).\n   * Default: `n => n.fixedValue`\n  */\n  nodeFixedValue?: NumericAccessor<N>;\n  /** Icon color accessor function or value. Default: `undefined` */\n  nodeIconColor?: ColorAccessor<SankeyNode<N, L>>;\n\n  // Links\n  /** Link color accessor function or value. Default: `l => l.color` */\n  linkColor?: StringAccessor<SankeyLink<N, L>>;\n  /** Link flow accessor function or value. Default: `l => l.value` */\n  linkValue?: NumericAccessor<L>;\n  /** Link cursor on hover. Default: `undefined` */\n  linkCursor?: StringAccessor<SankeyLink<N, L>>;\n\n  // Labels\n  /** Node label accessor function or value. Default: `n => n.label` */\n  label?: StringAccessor<SankeyNode<N, L>>;\n  /** Node sub-label accessor function or value. Default: `undefined` */\n  subLabel?: StringAccessor<SankeyNode<N, L>>;\n  /** Label position relative to the Node. Default: `Position.AUTO` */\n  labelPosition?: GenericAccessor<Position.Auto | Position.Left | Position.Right | string, SankeyNode<N, L>>;\n  /** Label vertical alignment */\n  labelVerticalAlign?: VerticalAlign | string;\n  /** Label background */\n  labelBackground?: boolean;\n  /** Label fit mode (wrap or trim). Default: `FitMode.TRIM` **/\n  labelFit?: FitMode;\n  /** Maximum label with in pixels. Default: `70` */\n  labelMaxWidth?: number;\n  /** Expand trimmed label on hover. Default: `true` */\n  labelExpandTrimmedOnHover?: boolean;\n  /** Label trimming mode. Default: `TrimMode.Middle` */\n  labelTrimMode?: TrimMode;\n  /** Label font size in pixels. If not provided, the value of CSS variable `--vis-sankey-node-label-font-size` will be used. Default: `undefined` */\n  labelFontSize?: number;\n  /** Label text separators for wrapping. Default: `[' ', '-']` */\n  labelTextSeparator?: string[];\n  /** Force break words to fit long labels. Default: `true` */\n  labelForceWordBreak?: boolean;\n  /** Label color. Default: `undefined` */\n  labelColor?: ColorAccessor<SankeyNode<N, L>>;\n  /** Label cursor on hover. Default: `undefined` */\n  labelCursor?: StringAccessor<SankeyNode<N, L>>;\n  /** Custom function to set the label visibility. Default: `undefined` */\n  labelVisibility?: ((d: SankeyNode<N, L>, bbox: { x: number; y: number; width: number; height: number }, hovered: boolean) => boolean) | undefined;\n  /** Sub-label font size in pixels. If not provided, the value of CSS variable `--vis-sankey-node-sublabel-font-size` will be used. Default: `undefined` */\n  subLabelFontSize?: number;\n  /** Sub-label color. Default: `undefined` */\n  subLabelColor?: ColorAccessor<SankeyNode<N, L>>;\n  /** Sub-label position. Default: `SankeySubLabelPlacement.Below` */\n  subLabelPlacement?: SankeySubLabelPlacement | string;\n  /**\n   * Sub-label to label width ratio when `subLabelPlacement` is set to `SankeySubLabelPlacement.Inline`\n   * Default: `0.4`, which means that 40% of `labelMaxWidth` will be given to sub-label, and 60% to the main label.\n  */\n  subLabelToLabelInlineWidthRatio?: number;\n}\n\nexport const SankeyDefaultConfig: SankeyConfigInterface<SankeyInputNode, SankeyInputLink> = ({\n  ...ComponentDefaultConfig,\n  heightNormalizationCoeff: 1 / 16,\n  exitTransitionType: SankeyExitTransitionType.Default,\n  enterTransitionType: SankeyEnterTransitionType.Default,\n  id: (d: SankeyInputNode, i: number) => (d as { _id: string })._id ?? `${i}`,\n  highlightSubtreeOnHover: false,\n  highlightDuration: 300,\n  highlightDelay: 1000,\n  iterations: 32,\n  nodeSort: undefined,\n  nodeWidth: 25,\n  nodeAlign: SankeyNodeAlign.Justify,\n  nodeHorizontalSpacing: 150,\n  nodeMinHeight: 20,\n  nodeMaxHeight: 100,\n  nodePadding: 2,\n  nodeColor: (d: SankeyInputNode) => (d as { color: string }).color,\n  nodeFixedValue: (d: SankeyInputNode) => (d as { fixedValue: number }).fixedValue,\n  showSingleNode: true,\n  nodeCursor: undefined,\n  nodeIcon: undefined,\n  nodeIconColor: undefined,\n  label: (d: SankeyInputNode) => (d as { label: string }).label,\n  labelPosition: Position.Auto,\n  labelVerticalAlign: VerticalAlign.Middle,\n  labelBackground: false,\n  labelTextSeparator: [' ', '-'],\n  labelFit: FitMode.Trim,\n  labelTrimMode: TrimMode.Middle,\n  labelForceWordBreak: true,\n  labelFontSize: undefined,\n  labelCursor: undefined,\n  labelColor: undefined,\n  labelMaxWidth: 70,\n  labelExpandTrimmedOnHover: true,\n  labelVisibility: undefined,\n  subLabel: undefined,\n  subLabelFontSize: undefined,\n  subLabelColor: undefined,\n  subLabelPlacement: SankeySubLabelPlacement.Below,\n  subLabelToLabelInlineWidthRatio: 0.4,\n  linkValue: (d: SankeyInputNode) => (d as { value: number }).value,\n  linkColor: (d: SankeyInputNode) => (d as { color: string }).color,\n  linkCursor: undefined,\n\n  // https://stackoverflow.com/a/21648197/2040291\n  init: function () {\n    (this as SankeyConfigInterface<SankeyInputNode, SankeyInputLink>).linkSort =\n      (link2, link1) => getNumber(link1, this.linkValue) - getNumber(link2, this.linkValue)\n    delete this.init\n    return this\n  },\n}).init()\n\n"],"names":[],"mappings":";;;;;;AAAA;AAyIa,MAAA,mBAAmB,GAA4D,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACvF,sBAAsB,CAAA,EAAA,EACzB,wBAAwB,EAAE,CAAC,GAAG,EAAE,EAChC,kBAAkB,EAAE,wBAAwB,CAAC,OAAO,EACpD,mBAAmB,EAAE,yBAAyB,CAAC,OAAO,EACtD,EAAE,EAAE,CAAC,CAAkB,EAAE,CAAS,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAC,EAAA,GAAA,CAAqB,CAAC,GAAG,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAG,CAAC,CAAA,CAAE,CAAA,EAAA,EAC3E,uBAAuB,EAAE,KAAK,EAC9B,iBAAiB,EAAE,GAAG,EACtB,cAAc,EAAE,IAAI,EACpB,UAAU,EAAE,EAAE,EACd,QAAQ,EAAE,SAAS,EACnB,SAAS,EAAE,EAAE,EACb,SAAS,EAAE,eAAe,CAAC,OAAO,EAClC,qBAAqB,EAAE,GAAG,EAC1B,aAAa,EAAE,EAAE,EACjB,aAAa,EAAE,GAAG,EAClB,WAAW,EAAE,CAAC,EACd,SAAS,EAAE,CAAC,CAAkB,KAAM,CAAuB,CAAC,KAAK,EACjE,cAAc,EAAE,CAAC,CAAkB,KAAM,CAA4B,CAAC,UAAU,EAChF,cAAc,EAAE,IAAI,EACpB,UAAU,EAAE,SAAS,EACrB,QAAQ,EAAE,SAAS,EACnB,aAAa,EAAE,SAAS,EACxB,KAAK,EAAE,CAAC,CAAkB,KAAM,CAAuB,CAAC,KAAK,EAC7D,aAAa,EAAE,QAAQ,CAAC,IAAI,EAC5B,kBAAkB,EAAE,aAAa,CAAC,MAAM,EACxC,eAAe,EAAE,KAAK,EACtB,kBAAkB,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAC9B,QAAQ,EAAE,OAAO,CAAC,IAAI,EACtB,aAAa,EAAE,QAAQ,CAAC,MAAM,EAC9B,mBAAmB,EAAE,IAAI,EACzB,aAAa,EAAE,SAAS,EACxB,WAAW,EAAE,SAAS,EACtB,UAAU,EAAE,SAAS,EACrB,aAAa,EAAE,EAAE,EACjB,yBAAyB,EAAE,IAAI,EAC/B,eAAe,EAAE,SAAS,EAC1B,QAAQ,EAAE,SAAS,EACnB,gBAAgB,EAAE,SAAS,EAC3B,aAAa,EAAE,SAAS,EACxB,iBAAiB,EAAE,uBAAuB,CAAC,KAAK,EAChD,+BAA+B,EAAE,GAAG,EACpC,SAAS,EAAE,CAAC,CAAkB,KAAM,CAAuB,CAAC,KAAK,EACjE,SAAS,EAAE,CAAC,CAAkB,KAAM,CAAuB,CAAC,KAAK,EACjE,UAAU,EAAE,SAAS;;AAGrB,IAAA,IAAI,EAAE,YAAA;AACH,QAAA,IAAgE,CAAC,QAAQ;YACxE,CAAC,KAAK,EAAE,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;QACvF,OAAO,IAAI,CAAC,IAAI,CAAA;AAChB,QAAA,OAAO,IAAI,CAAA;AACb,KAAC,EACD,CAAA,EAAC,IAAI;;;;"}