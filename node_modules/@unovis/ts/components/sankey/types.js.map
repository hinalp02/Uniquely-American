{"version":3,"file":"types.js","sources":["../../../src/components/sankey/types.ts"],"sourcesContent":["/* eslint-disable no-use-before-define */\nimport { sankeyLeft, sankeyRight, sankeyCenter, sankeyJustify } from 'd3-sankey'\nimport { GraphInputLink, GraphLinkCore, GraphNodeCore } from 'types/graph'\nimport { GraphInputNode } from '../../types'\n\nexport type SankeyInputNode = GraphInputNode\n\nexport type SankeyInputLink = GraphInputLink\n\nexport type SankeyNode<N extends SankeyInputNode, L extends SankeyInputLink> = GraphNodeCore<N, L> & {\n  id: string;\n  /** the node’s value; this is the sum of link.value for the node’s incoming links, or node.fixedValue if defined */\n  value: number;\n  /** */\n  fixedValue?: number;\n  /** the node’s zero-based column index, corresponding to its horizontal position */\n  layer: number;\n  /** */\n  isConnected: boolean;\n  /** the array of incoming links which have this node as their source */\n  sourceLinks?: SankeyLink<N, L>[];\n  /** the array of outgoing links which have this node as their target */\n  targetLinks: SankeyLink<N, L>[];\n  /** the node’s zero-based index within the array of nodes */\n  index: number;\n  /** the node’s zero-based graph depth, derived from the graph topology */\n  depth: number;\n  /** node.height - the node’s zero-based graph height, derived from the graph topology */\n  height: number;\n  /** the node’s minimum horizontal position, derived from node.depth */\n  x0: number;\n  /** the node’s maximum horizontal position (node.x0 + sankey.nodeWidth) */\n  x1: number;\n  /** the node’s minimum vertical position */\n  y0: number;\n  /** the node’s maximum vertical position (node.y1 - node.y0 is proportional to node.value) */\n  y1: number;\n  /** calculated node width */\n  width: number;\n  /** internal ui state */\n  _state?: {\n    greyout?: boolean;\n    /* Pre-calculated node height value in pixels that will be used to manually generate the layout when data has no links */\n    precalculatedHeight?: number;\n  };\n}\n\nexport type SankeyLink<N extends SankeyInputNode, L extends SankeyInputLink> = GraphLinkCore<N, L> & {\n  value: number;\n  /** the link’s source node */\n  source: SankeyNode<N, L>;\n  /** the link’s target node */\n  target: SankeyNode<N, L>;\n  /** the link’s vertical starting position (at source node) */\n  y0: number;\n  /** the link’s vertical end position (at target node) */\n  y1: number;\n  /** the link’s width (proportional to link.value) */\n  width: number;\n  /** the zero-based index of link within the array of links */\n  index: number;\n  /** internal ui state */\n  _state?: {\n    greyout?: boolean;\n  };\n}\n\nexport enum SankeySubLabelPlacement {\n  Inline = 'inline',\n  Below = 'below',\n}\n\nexport enum SankeyNodeAlign {\n  Left = 'left',\n  Right = 'right',\n  Center = 'center',\n  Justify = 'justify',\n}\n\nexport const SankeyLayout = {\n  [SankeyNodeAlign.Left]: sankeyLeft,\n  [SankeyNodeAlign.Right]: sankeyRight,\n  [SankeyNodeAlign.Center]: sankeyCenter,\n  [SankeyNodeAlign.Justify]: sankeyJustify,\n}\n\nexport enum SankeyExitTransitionType {\n  Default = 'default',\n  ToAncestor = 'to ancestor',\n}\n\nexport enum SankeyEnterTransitionType {\n  Default = 'default',\n  FromAncestor = 'from ancestor',\n}\n"],"names":[],"mappings":";;AAAA;IAmEY,wBAGX;AAHD,CAAA,UAAY,uBAAuB,EAAA;AACjC,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,uBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAHW,uBAAuB,KAAvB,uBAAuB,GAGlC,EAAA,CAAA,CAAA,CAAA;IAEW,gBAKX;AALD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,eAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EALW,eAAe,KAAf,eAAe,GAK1B,EAAA,CAAA,CAAA,CAAA;AAEY,MAAA,YAAY,GAAG;AAC1B,IAAA,CAAC,eAAe,CAAC,IAAI,GAAG,UAAU;AAClC,IAAA,CAAC,eAAe,CAAC,KAAK,GAAG,WAAW;AACpC,IAAA,CAAC,eAAe,CAAC,MAAM,GAAG,YAAY;AACtC,IAAA,CAAC,eAAe,CAAC,OAAO,GAAG,aAAa;EACzC;IAEW,yBAGX;AAHD,CAAA,UAAY,wBAAwB,EAAA;AAClC,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,YAAA,CAAA,GAAA,aAA0B,CAAA;AAC5B,CAAC,EAHW,wBAAwB,KAAxB,wBAAwB,GAGnC,EAAA,CAAA,CAAA,CAAA;IAEW,0BAGX;AAHD,CAAA,UAAY,yBAAyB,EAAA;AACnC,IAAA,yBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,yBAAA,CAAA,cAAA,CAAA,GAAA,eAA8B,CAAA;AAChC,CAAC,EAHW,yBAAyB,KAAzB,yBAAyB,GAGpC,EAAA,CAAA,CAAA;;;;"}