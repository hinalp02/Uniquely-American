{"version":3,"file":"label.js","sources":["../../../../src/components/xy-labels/modules/label.ts"],"sourcesContent":["import { Selection, select } from 'd3-selection'\nimport { mean } from 'd3-array'\nimport { color } from 'd3-color'\n\n// Utils\nimport { smartTransition } from 'utils/d3'\nimport { getCSSVariableValueInPixels, getCSSVariableValue, isStringCSSVariable } from 'utils/misc'\nimport { getColor, hexToBrightness } from 'utils/color'\nimport { getNumber, getString, getValue } from 'utils/data'\n\n// Types\nimport { ContinuousScale } from 'types/scale'\n\n// Config\nimport { XYLabelsConfigInterface } from '../config'\n\n// Local Types\nimport { XYLabel, XYLabelCluster, XYLabelPositioning, XYLabelRenderProps } from '../types'\n\nexport function createLabels<Datum> (\n  selection: Selection<SVGGElement, XYLabel<Datum> | XYLabelCluster<Datum>, any, any>\n): void {\n  selection.attr('transform', d => `translate(${d._screen.x},${d._screen.y})`)\n  selection.append('rect').style('fill', d => d._screen.backgroundColor)\n  selection.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'central')\n    .style('fill', d => d._screen.backgroundColor)\n    .style('pointer-events', 'none')\n\n  selection.attr('transform', d => `translate(${d._screen.x},${d._screen.y}) scale(0)`)\n}\n\nexport function updateLabels<Datum> (\n  selection: Selection<SVGGElement, XYLabel<Datum> | XYLabelCluster<Datum>, any, any>,\n  config: XYLabelsConfigInterface<Datum>,\n  duration: number\n): void {\n  selection.each((d, i, elements) => {\n    const group: Selection<SVGGElement, XYLabel<Datum> | XYLabelCluster<Datum>, any, any> = select(elements[i])\n    const text = group.select('text')\n    const rect = group.select('rect')\n\n    const backgroundColor = d._screen.backgroundColor\n    const labelText = d._screen.labelText ?? ''\n    const labelFontSize = d._screen.fontSize\n    let labelColor = d._screen.labelColor\n\n    // Label background\n    const backgroundHeight = labelFontSize * 1.7\n    let backgroundWidth = labelFontSize * labelText.length * 0.7\n    if (backgroundWidth < backgroundHeight) backgroundWidth = backgroundHeight\n    smartTransition(rect, duration)\n      .attr('width', backgroundWidth)\n      .attr('height', backgroundHeight)\n      .attr('x', -backgroundWidth / 2)\n      .attr('y', -backgroundHeight / 2)\n      .attr('rx', labelFontSize)\n      .attr('ry', labelFontSize)\n      .style('fill', backgroundColor)\n\n    // Label\n    if (!labelColor) {\n      const hex = color(isStringCSSVariable(backgroundColor) ? getCSSVariableValue(backgroundColor, group.node()) : backgroundColor)?.hex()\n      const brightness = hexToBrightness(hex)\n      labelColor = brightness > config.labelTextBrightnessRatio\n        ? 'var(--vis-xy-label-text-color-dark)'\n        : 'var(--vis-xy-label-text-color-light)'\n    }\n\n    text.html(labelText)\n      .attr('font-size', labelFontSize)\n\n    smartTransition(text, duration)\n      .style('fill', labelColor)\n\n    rect.style('cursor', d._screen.cursor)\n  })\n\n  smartTransition(selection, duration)\n    .attr('transform', d => `translate(${d._screen.x},${d._screen.y}) scale(1)`)\n}\n\nexport function removeLabels<Datum> (\n  selection: Selection<SVGGElement, XYLabel<Datum> | XYLabelCluster<Datum>, any, any>,\n  duration: number\n): void {\n  smartTransition(selection, duration)\n    .attr('transform', d => `translate(${d._screen.x},${d._screen.y}) scale(0)`)\n    .remove()\n}\n\nexport function getLabelPosition (value: number, positioning: XYLabelPositioning, scale: ContinuousScale): number {\n  switch (positioning) {\n    case XYLabelPositioning.DataSpace: return scale(value) ?? 0\n    case XYLabelPositioning.AbsolutePx: return value\n    case XYLabelPositioning.AbsolutePercentage: {\n      const scaleRange = scale.range()\n      return scaleRange[0] + (scaleRange[1] - scaleRange[0]) * value / 100\n    }\n  }\n}\n\nexport function getLabelRenderProps<Datum> (\n  data: Datum | XYLabel<Datum>[],\n  el: SVGGraphicsElement,\n  config: XYLabelsConfigInterface<Datum>,\n  xScale: ContinuousScale,\n  yScale: ContinuousScale\n): XYLabelRenderProps {\n  const isCluster = Array.isArray(data)\n  const fontSize = isCluster\n    ? (getNumber(data as XYLabel<Datum>[], config.clusterFontSize) ?? getCSSVariableValueInPixels('var(--vis-xy-label-cluster-font-size)', el))\n    : (getNumber(data as Datum, config.labelFontSize) ?? getCSSVariableValueInPixels('var(--vis-xy-label-font-size)', el))\n\n  const labelText = (isCluster ? getString(data as XYLabel<Datum>[], config.clusterLabel) : getString(data as Datum, config.label)) || ''\n  const backgroundHeight = fontSize * 1.7\n  let backgroundWidth = fontSize * labelText.length * 0.7\n  if (backgroundWidth < backgroundHeight) backgroundWidth = backgroundHeight\n\n  const x = isCluster\n    ? mean(data as XYLabel<Datum>[], d => d._screen.x)\n    : getLabelPosition(getNumber(data as Datum, config.x), getValue<Datum, XYLabelPositioning>(data as Datum, config.xPositioning), xScale)\n\n  const y = isCluster\n    ? mean(data as XYLabel<Datum>[], d => d._screen.y)\n    : getLabelPosition(getNumber(data as Datum, config.y), getValue<Datum, XYLabelPositioning>(data as Datum, config.yPositioning), yScale)\n\n  return {\n    x,\n    y,\n    fontSize,\n    labelText,\n    labelColor: isCluster ? getColor(data as XYLabel<Datum>[], config.clusterLabelColor) : getColor(data as Datum, config.color),\n    backgroundColor: isCluster ? getColor(data as XYLabel<Datum>[], config.clusterBackgroundColor) : getColor(data as Datum, config.backgroundColor),\n    cursor: isCluster ? getString(data as XYLabel<Datum>[], config.clusterCursor) : getString(data as Datum, config.cursor),\n    width: backgroundWidth,\n    height: backgroundHeight,\n  }\n}\n"],"names":[],"mappings":"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"}