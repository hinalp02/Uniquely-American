{"version":3,"file":"config.js","sources":["../../../src/components/topojson-map/config.ts"],"sourcesContent":["import { GeoProjection } from 'd3-geo'\nimport { ComponentConfigInterface, ComponentDefaultConfig } from 'core/component/config'\n\n// Types\nimport { ColorAccessor, NumericAccessor, StringAccessor } from 'types/accessor'\n\n// Local Types\nimport { MapProjection, MapPointLabelPosition } from './types'\n\nexport interface TopoJSONMapConfigInterface<\n  AreaDatum,\n  PointDatum = unknown,\n  LinkDatum = unknown,\n> extends ComponentConfigInterface {\n  // General\n  /** MapProjection (aka D3's GeoProjection) instance. Default: `MapProjection.Kavrayskiy7()` */\n  projection?: GeoProjection;\n  /** Map data in the TopoJSON topology format. Default: `undefined` */\n  topojson?: TopoJSON.Topology;\n  /** Name of the map features to be displayed, e.g. 'countries' or 'counties'. Default: `countries` */\n  mapFeatureName?: string;\n  /** Set initial map fit to points instead of topojson features. Default: `false` */\n  mapFitToPoints?: boolean;\n  /** Initial zoom level. Default: `undefined` */\n  zoomFactor?: number;\n  /** Disable pan / zoom interactions. Default: `false` */\n  disableZoom?: boolean;\n  /** Zoom extent. Default: `[0.5, 6]` */\n  zoomExtent?: number[];\n  /** Zoom animation duration. Default: `400` */\n  zoomDuration?: number;\n\n  /** Link width value or accessor function. Default: `d => d.width ?? 1` */\n  linkWidth?: NumericAccessor<LinkDatum>;\n  /** Link color value or accessor function. Default: `d => d.color ?? null` */\n  linkColor?: ColorAccessor<LinkDatum>;\n  /** Link cursor value or accessor function. Default: `null` */\n  linkCursor?: StringAccessor<LinkDatum>;\n  /** Link id accessor function. Default: `d => d.id` */\n  linkId?: StringAccessor<LinkDatum>;\n  /** Link source accessor function. Default: `d => d.source` */\n  linkSource?: ((l: LinkDatum) => number | string | PointDatum);\n  /** Link target accessor function. Default: `d => d.target` */\n  linkTarget?: ((l: LinkDatum) => number | string | PointDatum);\n\n  /** Area id accessor function corresponding to the feature id from TopoJSON. Default: `d => d.id ?? ''` */\n  areaId?: StringAccessor<AreaDatum>;\n  /** Area color value or accessor function. Default: `d => d.color ?? null` */\n  areaColor?: ColorAccessor<AreaDatum>;\n  /** Area cursor value or accessor function. Default: `null` */\n  areaCursor?: StringAccessor<AreaDatum>;\n\n  /** Point color accessor. Default: `d => d.color ?? null` */\n  pointColor?: ColorAccessor<PointDatum>;\n  /** Point radius accessor. Default: `d => d.radius ?? 8` */\n  pointRadius?: NumericAccessor<PointDatum>;\n  /** Point stroke width accessor. Default: `d => d.strokeWidth ?? null` */\n  pointStrokeWidth?: NumericAccessor<PointDatum>;\n  /** Point cursor constant value or accessor function. Default: `null` */\n  pointCursor?: StringAccessor<PointDatum>;\n  /** Point longitude accessor function. Default: `d => d.longitude ?? null` */\n  longitude?: NumericAccessor<PointDatum>;\n  /** Point latitude accessor function. Default: `d => d.latitude ?? null` */\n  latitude?: NumericAccessor<PointDatum>;\n  /** Point label accessor function. Default: `undefined` */\n  pointLabel?: StringAccessor<PointDatum>;\n  /** Point label position. Default: `Position.Bottom` */\n  pointLabelPosition?: MapPointLabelPosition;\n  /** Point color brightness ratio for switching between dark and light text label color. Default: `0.65` */\n  pointLabelTextBrightnessRatio?: number;\n  /** Point id accessor function. Default: `d => d.id` */\n  pointId?: ((d: PointDatum, i: number) => string);\n\n  /** Enables blur and blending between neighbouring points. Default: `false` */\n  heatmapMode?: boolean;\n  /** Heatmap blur filter stdDeviation value. Default: `10` */\n  heatmapModeBlurStdDeviation?: number;\n  /** Zoom level at which the heatmap mode will be disabled. Default: `2.5` */\n  heatmapModeZoomLevelThreshold?: number;\n}\n\nexport const TopoJSONMapDefaultConfig: TopoJSONMapConfigInterface<unknown, unknown, unknown> = {\n  ...ComponentDefaultConfig,\n  projection: MapProjection.Kavrayskiy7(),\n  duration: 1500,\n  topojson: undefined,\n  mapFeatureName: 'countries',\n  mapFitToPoints: false,\n\n  zoomExtent: [0.5, 6],\n  zoomDuration: 400,\n  disableZoom: false,\n  zoomFactor: undefined,\n\n  linkWidth: (d: unknown): number => (d as { width: number }).width ?? 1,\n  linkColor: (d: unknown): string => (d as { color: string }).color ?? null,\n  linkCursor: null,\n  linkId: (d: unknown, i: number | undefined): string => `${(d as { id: string }).id ?? i}`,\n  linkSource: (d: unknown): (number | string | unknown) => (d as { source: string }).source,\n  linkTarget: (d: unknown): (number | string | unknown) => (d as { target: string }).target,\n\n  areaId: (d: unknown): string => (d as { id: string }).id ?? '',\n  areaColor: (d: unknown): string => (d as { color: string }).color ?? null,\n  areaCursor: null,\n\n  longitude: (d: unknown): number => (d as { longitude: number }).longitude,\n  latitude: (d: unknown): number => (d as { latitude: number }).latitude,\n  pointColor: (d: unknown): string => (d as { color: string }).color ?? null,\n  pointRadius: (d: unknown): number => (d as { radius: number }).radius ?? 8,\n  pointStrokeWidth: (d: unknown): number => (d as { strokeWidth: number }).strokeWidth ?? 0,\n  pointCursor: null,\n  pointLabel: undefined,\n  pointLabelPosition: MapPointLabelPosition.Bottom,\n  pointLabelTextBrightnessRatio: 0.65,\n  pointId: (d: unknown): string => (d as { id: string }).id,\n\n  heatmapMode: false,\n  heatmapModeBlurStdDeviation: 8,\n  heatmapModeZoomLevelThreshold: 2.5,\n}\n\n"],"names":[],"mappings":";;;AAiFO,MAAM,wBAAwB,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAChC,sBAAsB,CAAA,EAAA,EACzB,UAAU,EAAE,aAAa,CAAC,WAAW,EAAE,EACvC,QAAQ,EAAE,IAAI,EACd,QAAQ,EAAE,SAAS,EACnB,cAAc,EAAE,WAAW,EAC3B,cAAc,EAAE,KAAK,EAErB,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EACpB,YAAY,EAAE,GAAG,EACjB,WAAW,EAAE,KAAK,EAClB,UAAU,EAAE,SAAS,EAErB,SAAS,EAAE,CAAC,CAAU,KAAa,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,MAAC,CAAuB,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAC,CAAA,EAAA,EACtE,SAAS,EAAE,CAAC,CAAU,KAAY,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAC,CAAuB,CAAC,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAA,EAAA,EACzE,UAAU,EAAE,IAAI,EAChB,MAAM,EAAE,CAAC,CAAU,EAAE,CAAqB,KAAY,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAG,CAAC,EAAA,GAAA,CAAoB,CAAC,EAAE,mCAAI,CAAC,CAAA,CAAE,CAAA,EAAA,EACzF,UAAU,EAAE,CAAC,CAAU,KAAmC,CAAwB,CAAC,MAAM,EACzF,UAAU,EAAE,CAAC,CAAU,KAAmC,CAAwB,CAAC,MAAM,EAEzF,MAAM,EAAE,CAAC,CAAU,KAAa,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,MAAC,CAAoB,CAAC,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAA,EAAA,EAC9D,SAAS,EAAE,CAAC,CAAU,KAAa,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,MAAC,CAAuB,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAA,EAAA,EACzE,UAAU,EAAE,IAAI,EAEhB,SAAS,EAAE,CAAC,CAAU,KAAc,CAA2B,CAAC,SAAS,EACzE,QAAQ,EAAE,CAAC,CAAU,KAAc,CAA0B,CAAC,QAAQ,EACtE,UAAU,EAAE,CAAC,CAAU,KAAa,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAC,EAAA,GAAA,CAAuB,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAA,EAAA,EAC1E,WAAW,EAAE,CAAC,CAAU,KAAY,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAC,CAAwB,CAAC,MAAM,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAA,EAAA,EAC1E,gBAAgB,EAAE,CAAC,CAAU,KAAa,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAC,EAAA,GAAA,CAA6B,CAAC,WAAW,mCAAI,CAAC,CAAA,EAAA,EACzF,WAAW,EAAE,IAAI,EACjB,UAAU,EAAE,SAAS,EACrB,kBAAkB,EAAE,qBAAqB,CAAC,MAAM,EAChD,6BAA6B,EAAE,IAAI,EACnC,OAAO,EAAE,CAAC,CAAU,KAAc,CAAoB,CAAC,EAAE,EAEzD,WAAW,EAAE,KAAK,EAClB,2BAA2B,EAAE,CAAC,EAC9B,6BAA6B,EAAE,GAAG;;;;"}