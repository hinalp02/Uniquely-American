{"version":3,"file":"config.js","sources":["../../../src/components/timeline/config.ts"],"sourcesContent":["import { XYComponentConfigInterface, XYComponentDefaultConfig } from 'core/xy-component/config'\n\n// Types\nimport { WithOptional } from 'types/misc'\nimport { ColorAccessor, NumericAccessor, StringAccessor } from 'types/accessor'\n\nexport interface TimelineConfigInterface<Datum> extends WithOptional<XYComponentConfigInterface<Datum>, 'y'> {\n  /** Timeline item color accessor function. Default: `d => d.color` */\n  color?: ColorAccessor<Datum>;\n  /** Width of the timeline items. Default: `8` */\n  lineWidth?: NumericAccessor<Datum>;\n  /** Display rounded ends for timeline items. Default: `true` */\n  lineCap?: boolean;\n  /** Timeline row height. Default: `22` */\n  rowHeight?: number;\n  /** Timeline item length accessor function. Default: `d => d.length` */\n  length?: NumericAccessor<Datum>;\n  /** Timeline item type accessor function. Records of one type will be plotted in one row. Default: `d => d.type` */\n  type?: StringAccessor<Datum>;\n  /** Configurable Timeline item cursor when hovering over. Default: `null` */\n  cursor?: StringAccessor<Datum>;\n  /** Show item type labels when set to `true`. Default: `false` */\n  showLabels?: boolean;\n  /** Fixed label width in pixels. Labels longer than the specified value will be trimmed. Default: `undefined` */\n  labelWidth?: number;\n  /** Maximum label width in pixels. Labels longer than the specified value will be trimmed. Default: `120` */\n  maxLabelWidth?: number;\n  /** Alternating row colors. Default: `true` */\n  alternatingRowColors?: boolean;\n  /** Scrolling callback function: `(scrollTop: number) => void`. Default: `undefined` */\n  onScroll?: (scrollTop: number) => void;\n  /** Sets the minimum line length to 1 pixel for better visibility of small values. Default: `false` */\n  showEmptySegments?: boolean;\n}\n\nexport const TimelineDefaultConfig: TimelineConfigInterface<unknown> = {\n  ...XYComponentDefaultConfig,\n  id: undefined,\n  color: (d: unknown): string => (d as { color: string }).color,\n  lineWidth: 8,\n  lineCap: false,\n  rowHeight: 22,\n  length: (d: unknown): number => (d as { length: number }).length,\n  type: (d: unknown): string => (d as { type: string }).type,\n  cursor: null,\n  labelWidth: undefined,\n  showLabels: false,\n  maxLabelWidth: 120,\n  alternatingRowColors: true,\n  onScroll: undefined,\n  showEmptySegments: false,\n}\n"],"names":[],"mappings":";;AAmCa,MAAA,qBAAqB,GAC7B,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,wBAAwB,KAC3B,EAAE,EAAE,SAAS,EACb,KAAK,EAAE,CAAC,CAAU,KAAc,CAAuB,CAAC,KAAK,EAC7D,SAAS,EAAE,CAAC,EACZ,OAAO,EAAE,KAAK,EACd,SAAS,EAAE,EAAE,EACb,MAAM,EAAE,CAAC,CAAU,KAAc,CAAwB,CAAC,MAAM,EAChE,IAAI,EAAE,CAAC,CAAU,KAAc,CAAsB,CAAC,IAAI,EAC1D,MAAM,EAAE,IAAI,EACZ,UAAU,EAAE,SAAS,EACrB,UAAU,EAAE,KAAK,EACjB,aAAa,EAAE,GAAG,EAClB,oBAAoB,EAAE,IAAI,EAC1B,QAAQ,EAAE,SAAS,EACnB,iBAAiB,EAAE,KAAK;;;;"}