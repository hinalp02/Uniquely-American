{"version":3,"file":"index.js","sources":["../../../src/components/grouped-bar/index.ts"],"sourcesContent":["import { scaleBand } from 'd3-scale'\nimport { min, max, range } from 'd3-array'\n\n// Core\nimport { XYComponentCore } from 'core/xy-component'\n\n// Utils\nimport { clamp, getExtent, getMax, getMin, getNumber, getString, isArray, isEmpty, isNumber } from 'utils/data'\nimport { roundedRectPath } from 'utils/path'\nimport { smartTransition } from 'utils/d3'\nimport { getColor } from 'utils/color'\n\n// Types\nimport { NumericAccessor } from 'types/accessor'\nimport { Spacing } from 'types/spacing'\nimport { Direction } from 'types/direction'\nimport { Orientation } from 'types/position'\nimport { ContinuousScale } from 'types/scale'\n\n// Config\nimport { GroupedBarDefaultConfig, GroupedBarConfigInterface } from './config'\n\n// Styles\nimport * as s from './style'\n\nexport class GroupedBar<Datum> extends XYComponentCore<Datum, GroupedBarConfigInterface<Datum>> {\n  static selectors = s\n  protected _defaultConfig = GroupedBarDefaultConfig as GroupedBarConfigInterface<Datum>\n  public config: GroupedBarConfigInterface<Datum> = this._defaultConfig\n\n  getAccessors = (): NumericAccessor<Datum>[] =>\n    isArray(this.config.y) ? this.config.y : [this.config.y]\n\n  protected events = {\n  }\n\n  private _barData: Datum[] = []\n\n  constructor (config?: GroupedBarConfigInterface<Datum>) {\n    super()\n    if (config) this.setConfig(config)\n  }\n\n  get bleed (): Spacing {\n    this._barData = this._getVisibleData()\n    if (this._barData.length === 0) return { top: 0, bottom: 0, left: 0, right: 0 }\n\n    // By default, horizontal orientation is \"flipped\", i.e. the `yDirection` of `XYContainer` is set to `Direction.North`\n    const isHorizontalAndFlipped = !this.isVertical() && (this.dataScale.range()[0] > this.dataScale.range()[1])\n    const dataDomain = this.dataScale.domain()\n    const halfGroupWidth = this._getGroupWidth() / 2\n\n    const dataScaleValues = this._barData.map((d, i) => getNumber(d, this.config.x, i))\n    const firstDataValue = min(dataScaleValues)\n    const lastDataValue = max(dataScaleValues)\n    const firstValuePx = this.dataScale(firstDataValue)\n    const lastValuePx = this.dataScale(lastDataValue)\n\n    const dataDomainRequiredStart = this.dataScale.invert(firstValuePx + (isHorizontalAndFlipped ? halfGroupWidth : -halfGroupWidth))\n    const dataDomainRequiredEnd = this.dataScale.invert(lastValuePx + (isHorizontalAndFlipped ? -halfGroupWidth : halfGroupWidth))\n    const bleedPxStart = dataDomainRequiredStart <= dataDomain[0] ? this.dataScale(dataDomain[0]) - this.dataScale(dataDomainRequiredStart) : 0\n    const bleedPxEnd = dataDomainRequiredEnd > dataDomain[1] ? this.dataScale(dataDomainRequiredEnd) - this.dataScale(dataDomain[1]) : 0\n\n    return {\n      top: this.isVertical() ? 0 : (isHorizontalAndFlipped ? -bleedPxEnd : bleedPxStart),\n      bottom: this.isVertical() ? 0 : (isHorizontalAndFlipped ? -bleedPxStart : bleedPxEnd),\n      left: this.isVertical() ? bleedPxStart : 0,\n      right: this.isVertical() ? bleedPxEnd : 0,\n    }\n  }\n\n  private get dataScale (): ContinuousScale {\n    return this.isVertical() ? this.xScale : this.yScale\n  }\n\n  private get valueScale (): ContinuousScale {\n    return this.isVertical() ? this.yScale : this.xScale\n  }\n\n  private isVertical (): boolean {\n    return this.config.orientation === Orientation.Vertical\n  }\n\n  _render (customDuration?: number): void {\n    const { config } = this\n    const duration = isNumber(customDuration)\n      ? customDuration\n      : config.duration\n    const groupWidth = this._getGroupWidth()\n\n    const yAccessors = this.getAccessors()\n    const innerBandScaleRange = [-groupWidth / 2, groupWidth / 2] as [\n      number,\n      number,\n    ]\n    const innerBandScale = scaleBand<number>()\n      .domain(range(yAccessors.length))\n      .range(innerBandScaleRange)\n      .paddingInner(config.barPadding)\n      .paddingOuter(config.barPadding)\n\n    const barGroups = this.g\n      .selectAll<SVGGElement, Datum>(`.${s.barGroup}`)\n      .data(this._barData, (d, i) => `${getString(d, config.id, i) ?? i}`)\n\n    const getBarGroupsTransform = (d: Datum, i: number): string => {\n      const v = this.dataScale(getNumber(d, config.x, i))\n      const x = this.isVertical() ? v : 0\n      const y = this.isVertical() ? 0 : v\n      return `translate(${x},${y})`\n    }\n\n    const barGroupsEnter = barGroups\n      .enter()\n      .append('g')\n      .attr('class', s.barGroup)\n      .attr('transform', getBarGroupsTransform)\n      .style('opacity', 1)\n\n    const barGroupsMerged = barGroupsEnter.merge(barGroups)\n    smartTransition(barGroupsMerged, duration)\n      .attr('transform', getBarGroupsTransform)\n      .style('opacity', 1)\n\n    const barGroupExit = barGroups.exit().attr('class', s.barGroupExit)\n    smartTransition(barGroupExit, duration).style('opacity', 0).remove()\n\n    // Animate exiting bars going down\n    smartTransition(barGroupExit.selectAll<SVGPathElement, Datum>(`.${s.bar}`), duration)\n      .attr('transform', (d, i, e) => {\n        return this.isVertical()\n          ? `translate(0,${this.yScale(0)}) scale(1,0)`\n          : `translate(${this.xScale(0)},0) scale(0,1)`\n      })\n\n    const barWidth = innerBandScale.bandwidth()\n    const bars = barGroupsMerged\n      .selectAll<SVGPathElement, Datum>(`.${s.bar}`)\n      .data((d) => yAccessors.map(() => d))\n\n    const valueAxisDirection = this._getValueAxisDirection()\n    const barsEnter = bars\n      .enter()\n      .append('path')\n      .attr('class', s.bar)\n      .attr('d', (d, i) => {\n        const x = innerBandScale(i)\n        const y = this.valueScale(0)\n        const width = barWidth\n        const height = 0\n        return this._getBarPath(x, y, width, height, false, valueAxisDirection)\n      })\n      .style('fill', (d, i) => getColor(d, config.color, i))\n\n    const barsMerged = barsEnter.merge(bars)\n    smartTransition(barsMerged, duration)\n      .attr('d', (d, j) => {\n        const x = innerBandScale(j)\n        const width = barWidth\n\n        // Todo: Find a way to pass the datum index to `getNumber` below\n        const value = getNumber(d, yAccessors[j])\n        const isNegative = value < 0\n        let y = isNegative ? this.valueScale(0) : this.valueScale(value || 0)\n        let height = Math.abs(this.valueScale(0) - this.valueScale(value)) || 0\n\n        // Optionally set minimum bar height\n        if (height < config.barMinHeight) {\n          const dir = valueAxisDirection === Direction.North ? -1 : 1\n          y = this.valueScale(0) + dir * config.barMinHeight\n          height = config.barMinHeight\n        }\n        return this._getBarPath(x, y, width, height, isNegative, valueAxisDirection)\n      })\n      .style('fill', (d, i) => getColor(d, config.color, i))\n      .style('cursor', (d, i) => getString(d, config.cursor, i))\n\n    smartTransition(bars.exit(), duration).remove()\n  }\n\n  _getValueAxisDirection (): Direction.North | Direction.South {\n    return this.valueScale.range()[0] > this.valueScale.range()[1]\n      ? Direction.North\n      : Direction.South\n  }\n\n  _getVisibleData (): Datum[] {\n    const {\n      config,\n      datamodel: { data },\n    } = this\n    const groupWidth = this._getGroupWidth()\n    const halfGroupWidth = data.length < 2 ? 0 : groupWidth / 2\n\n    const dataScale = this.dataScale\n    const xHalfGroupWidth = Math.abs(\n      (dataScale.invert(halfGroupWidth) as number) -\n        (dataScale.invert(0) as number)\n    )\n    const filtered = data?.filter((d, i) => {\n      const v = getNumber(d, config.x, i)\n      const domain: number[] | Date[] = dataScale.domain()\n      const domainMin = +domain[0]\n      const domainMax = +domain[1]\n      return (\n        v >= domainMin - xHalfGroupWidth && v <= domainMax + xHalfGroupWidth\n      )\n    })\n\n    return filtered\n  }\n\n  _getBarPath (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    isNegative: boolean,\n    direction: Direction.North | Direction.South\n  ): string {\n    const { config } = this\n\n    const cornerRadius = config.roundedCorners\n      ? isNumber(config.roundedCorners)\n        ? +config.roundedCorners\n        : width / 2\n      : 0\n    const cornerRadiusClamped = clamp(\n      cornerRadius,\n      0,\n      Math.min(height, width) / 2\n    )\n\n    const isNorthDirected = direction === Direction.North\n    const roundedTop = this.isVertical() && isNegative !== isNorthDirected\n    const roundedBottom = this.isVertical() && isNegative === isNorthDirected\n    const roundedLeft = !this.isVertical() && isNegative\n    const roundedRight = !this.isVertical() && !isNegative\n\n    return roundedRectPath({\n      x: this.isVertical() ? x : y + (isNorthDirected ? 0 : -height),\n      y: this.isVertical() ? y + (isNorthDirected ? 0 : -height) : x,\n      w: this.isVertical() ? width : height,\n      h: this.isVertical() ? height : width,\n      tl: roundedTop || roundedLeft,\n      tr: roundedTop || roundedRight,\n      bl: roundedBottom || roundedLeft,\n      br: roundedBottom || roundedRight,\n      r: cornerRadiusClamped,\n    })\n  }\n\n  _getGroupWidth (): number {\n    const {\n      config,\n      datamodel: { data },\n    } = this\n    if (isEmpty(data)) return 0\n    if (config.groupWidth) { return min([config.groupWidth, config.groupMaxWidth]) }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const isOrdinal = this.dataScale.bandwidth\n    const domain = (\n      this.dataScale.domain ? this.dataScale.domain() : []\n    ) as number[]\n    const domainLength = isOrdinal ? domain.length : domain[1] - domain[0]\n\n    // If the dataStep property is provided the amount of data elements is calculates as domainLength / dataStep\n    //   otherwise we get the number of data elements within the domain range\n    // Or if the scale is ordinal we use data.length\n    let dataSize =\n      1 + domainLength / config.dataStep ||\n      (!isOrdinal &&\n        data.filter((d, i) => {\n          const value = getNumber(d, config.x, i)\n          return value >= domain[0] && value <= domain[1]\n        }).length) ||\n      data.length\n\n    // We increase the dataSize by 1 to take into account possible additional domain space\n    if (!isOrdinal && dataSize >= 2) dataSize += 1\n\n    const c = dataSize < 2 ? 1 : 1 - config.groupPadding\n    const groupWidth =\n      (c * (this.isVertical() ? this._width : this._height)) / dataSize\n    return min([groupWidth, config.groupMaxWidth])\n  }\n\n  getValueScaleExtent (scaleByVisibleData: boolean): number[] {\n    const { datamodel } = this\n    const yAccessors = this.getAccessors()\n\n    const data = scaleByVisibleData ? this._getVisibleData() : datamodel.data\n    const min = getMin(data, ...yAccessors)\n    const max = getMax(data, ...yAccessors)\n    return [min > 0 ? 0 : min, max < 0 ? 0 : max]\n  }\n\n\n  getDataScaleExtent (): number[] {\n    const { config, datamodel } = this\n    return getExtent(datamodel.data, config.x)\n  }\n\n  getYDataExtent (scaleByVisibleData: boolean): number[] {\n    return this.isVertical()\n      ? this.getValueScaleExtent(scaleByVisibleData)\n      : this.getDataScaleExtent()\n  }\n\n  getXDataExtent (): number[] {\n    return this.isVertical()\n      ? this.getDataScaleExtent()\n      : this.getValueScaleExtent(false)\n  }\n}\n"],"names":["s.barGroup","barGroupExit","s.barGroupExit","s.bar","s"],"mappings":"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"}