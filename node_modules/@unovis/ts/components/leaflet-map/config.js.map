{"version":3,"file":"config.js","sources":["../../../src/components/leaflet-map/config.ts"],"sourcesContent":["/* eslint-disable no-irregular-whitespace */\n\n// Core\nimport { ComponentDefaultConfig, ComponentConfigInterface } from 'core/component/config'\nimport { Tooltip } from 'components/tooltip'\n\n// Types\nimport { ColorAccessor, GenericAccessor, NumericAccessor, StringAccessor } from 'types/accessor'\nimport { GenericDataRecord } from 'types/data'\n\n// Local Types\nimport {\n  Bounds,\n  LeafletMapPointStyles,\n  MapZoomState,\n  LeafletMapPointDatum,\n  LeafletMapPointShape,\n  LeafletMapClusterDatum,\n  LeafletMapRenderer,\n} from './types'\n\n// Renderer settings\nimport { MapLibreStyleSpecs } from './renderer/map-style'\n\nexport interface LeafletMapConfigInterface<Datum extends GenericDataRecord> extends ComponentConfigInterface {\n  // General\n  /** Width in pixels or in CSS units. By default, the map will automatically fit to the size of the parent element. Default: `undefined`. */\n  width?: number | string;\n  /** Height in pixels or in CSS units. By default, the map will automatically fit to the size of the parent element. Default: `undefined`. */\n  height?: number | string;\n  /** Animation duration when the map is automatically panning or zooming to a point or area. Default: `1500` ms */\n  flyToDuration?: number;\n  /** Padding to be used when the `fitView` function has been called. The value is in pixels, [topLeft, bottomRight]. Default: `[150, 150]` */\n  fitViewPadding?: [number, number];\n  /** Animation duration for the `setZoom` function. Default: `800` ms */\n  zoomDuration?: number;\n  /** Default bounds that will be applied on the first map render if the bounds property is not set. Default: `undefined` */\n  initialBounds?: Bounds;\n  /** Force set map bounds on config and data updates. Default: `undefined` */\n  fitBoundsOnUpdate?: Bounds;\n  /** Fit the view to contain the data points on map initialization. Default: `true` */\n  fitViewOnInit?: boolean;\n  /** Fit the view to contain the data points on map config and data updates. Default: `false` */\n  fitViewOnUpdate?: boolean;\n  /** MapLibre `StyleSpecification` settings, or a URL to it. When renderer is set to`LeafletMapRenderer.Raster`, provide a template URL. Default: `undefined` */\n  style: MapLibreStyleSpecs | string | undefined;\n  /** MapLibre `StyleSpecification` settings or URL for dark theme. Default: `undefined` */\n  styleDarkTheme?: MapLibreStyleSpecs | string | undefined;\n  /** Tile server access token or API key. Default: `''` */\n  accessToken?: string;\n  /** Array of attribution labels. Default: `['<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap contributors</a>']` */\n  attribution?: string[];\n  /** Rendering mode for map's tile layer. For raster files, use `LeafletMapRenderer.Raster`. Default: `LeafletMapRenderer.MapLibre` */\n  renderer?: LeafletMapRenderer | string;\n\n  // Map events\n  /** Function to be called after the map's async initialization is done. Default: `undefined` */\n  onMapInitialized?: (() => void);\n  /** Map Move / Zoom unified callback function. Default: `undefined` */\n  onMapMoveZoom?: (({ mapCenter, zoomLevel, bounds }: MapZoomState) => void);\n  /** Map Move Start callback function. Default: `undefined` */\n  onMapMoveStart?: (({ mapCenter, zoomLevel, bounds }: MapZoomState) => void);\n  /** Map Move End callback function. Default: `undefined` */\n  onMapMoveEnd?: (({ mapCenter, zoomLevel, bounds }: MapZoomState) => void);\n  /** Map Zoom Start callback function. Default: `undefined` */\n  onMapZoomStart?: (({ mapCenter, zoomLevel, bounds }: MapZoomState) => void);\n  /** Map Zoom End callback function. Default: `undefined` */\n  onMapZoomEnd?: (({ mapCenter, zoomLevel, bounds }: MapZoomState) => void);\n  /** Map Zoom Click callback function. Default: `undefined` */\n  onMapClick?: (({ mapCenter, zoomLevel, bounds }: MapZoomState) => void);\n\n  // Point\n  /** Point longitude accessor function. Default: `d => d.longitude` */\n  pointLongitude?: NumericAccessor<Datum>;\n  /** Point latitude accessor function. Default: `d => d.latitude` */\n  pointLatitude?: NumericAccessor<Datum>;\n  /** Point id accessor function or constant value. Default: `d => d.id`  */\n  pointId?: StringAccessor<Datum>;\n  /** Point shape accessor function or constant value. Default: `d => d.shape`  */\n  pointShape?: GenericAccessor<LeafletMapPointShape | string, Datum>;\n  /** Point color accessor function or constant value. Default: `d => d.color`  */\n  pointColor?: ColorAccessor<LeafletMapPointDatum<Datum>>;\n  /** Point radius accessor function or constant value. Default: `undefined`  */\n  pointRadius?: NumericAccessor<LeafletMapPointDatum<Datum>>;\n  /** Point inner label accessor function. Default: `undefined`  */\n  pointLabel?: StringAccessor<LeafletMapPointDatum<Datum>>;\n  /** Point inner label color accessor function or constant value.\n   * By default, the label color will be set, depending on the point brightness, either to\n   * `--vis-map-point-inner-label-text-color-light` or to `--vis-map-point-inner-label-text-color-dark` CSS variable.\n   * Default: `undefined`\n  */\n  pointLabelColor?: StringAccessor<LeafletMapPointDatum<Datum>>;\n  /** Point bottom label accessor function. Default: `''` */\n  pointBottomLabel?: StringAccessor<LeafletMapPointDatum<Datum>>;\n  /** Point cursor value or accessor function. Default: `null` */\n  pointCursor?: StringAccessor<LeafletMapPointDatum<Datum>>;\n  /** The width of the ring when a point has a `LeafletMapPointShape.Ring` shape. Default: `1.25` */\n  pointRingWidth?: number;\n  /** Set selected point by its unique id. Default: `undefined` */\n  selectedPointId?: string;\n\n  // Cluster\n  /** Cluster color accessor function or constant value. Default: `undefined`  */\n  clusterColor?: ColorAccessor<LeafletMapClusterDatum<Datum>>;\n  /** Cluster radius accessor function or constant value. Default: `undefined`  */\n  clusterRadius?: NumericAccessor<LeafletMapClusterDatum<Datum>>;\n  /** Cluster inner label accessor function. Default: `d => d.point_count`  */\n  clusterLabel?: StringAccessor<LeafletMapClusterDatum<Datum>>;\n  /** Cluster inner label color accessor function or constant value.\n   * By default, the label color will be set, depending on the point brightness, either to\n   * `--vis-map-cluster-inner-label-text-color-light` or to `--vis-map-cluster-inner-label-text-color-dark` CSS variable.\n   * Default: `undefined`\n  */\n  clusterLabelColor?: StringAccessor<LeafletMapClusterDatum<Datum>>;\n  /** Cluster bottom label accessor function. Default: `''` */\n  clusterBottomLabel?: StringAccessor<LeafletMapClusterDatum<Datum>>;\n  /** The width of the cluster point ring. Default: `1.25` */\n  clusterRingWidth?: number;\n  /** When cluster is expanded, show a background circle to better separate points from the base map. Default: `true` */\n  clusterBackground?: boolean;\n  /** Defines whether the cluster should expand on click or not. Default: `true` */\n  clusterExpandOnClick?: boolean;\n  /** Clustering distance in pixels. This value will be passed to Supercluster as the `radius` property https://github.com/mapbox/supercluster. Default: `55` */\n  clusteringDistance?: number;\n  /** A single map point can have multiple properties displayed as a small pie chart (or a donut chart for a cluster of points).\n   * By setting the colorMap configuration you can specify data properties that should be mapped to various pie / donut segments.\n   *\n   * ```\n   * {\n   *   [key in keyof Datum]?: { color: string, className?: string }\n   * }\n   * ```\n   * e.g.:\n   * ```\n   * {\n   *   healthy: { color: 'green' },\n   *   warning: { color: 'orange' },\n   *   danger: { color: 'red' }\n   * }\n   * ```\n   * where every data point has the `healthy`, `warning` and `danger` numerical or boolean property.\n   */\n  colorMap?: LeafletMapPointStyles<Datum>;\n\n  // TopoJSON overlay\n  /** A TopoJSON Geometry layer to be displayed on top of the map. Supports fill and stroke */\n  topoJSONLayer?: {\n    /** The TopoJSON.Topology object. Default: `undefined` */\n    sources: any;\n    /** Name of the geometry feature to be displayed. Default: `undefined` */\n    featureName?: string;\n    /** Name of the property to be used for defining the fill color of the geometry. Default: `undefined` */\n    fillProperty?: string;\n    /** Name of the property to be used for defining the stroke color of the geometry. Default: `undefined` */\n    strokeProperty?: string;\n    /** Geometry fill opacity value. Default: `0.6` */\n    fillOpacity?: number;\n    /** Geometry stroke opacity value. Default: `0.8` */\n    strokeOpacity?: number;\n    /** Geometry stroke width. Default: `2` */\n    strokeWidth?: number;\n  };\n\n  // Misc\n  /** Tooltip component. Default: `undefined` */\n  tooltip?: Tooltip;\n\n  /** Alternative text description of the chart for accessibility purposes. It will be applied as an\n   * `aria-label` attribute to the div element containing your chart. Default: `undefined`.\n  */\n  ariaLabel?: string | null | undefined;\n}\n\nexport const LeafletMapDefaultConfig: LeafletMapConfigInterface<GenericDataRecord> = {\n  ...ComponentDefaultConfig,\n  // General\n  width: undefined,\n  height: undefined,\n  flyToDuration: 1500,\n  fitViewPadding: [150, 150],\n  zoomDuration: 800,\n  initialBounds: undefined,\n  fitBoundsOnUpdate: undefined,\n  fitViewOnInit: true,\n  fitViewOnUpdate: false,\n  attribution: ['<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap contributors</a>'],\n  accessToken: '',\n  style: undefined,\n  styleDarkTheme: undefined,\n  renderer: LeafletMapRenderer.MapLibre,\n\n  // Map events\n  onMapInitialized: undefined,\n  onMapMoveZoom: undefined,\n  onMapMoveStart: undefined,\n  onMapMoveEnd: undefined,\n  onMapZoomStart: undefined,\n  onMapZoomEnd: undefined,\n  onMapClick: undefined,\n\n  // Point\n  pointLongitude: (d: unknown): number => (d as { longitude: number }).longitude,\n  pointLatitude: (d: unknown): number => (d as { latitude: number }).latitude,\n  pointId: (d: unknown): string => (d as { id: string }).id,\n  pointShape: (d: unknown): string => (d as { shape: string }).shape,\n  pointColor: (d: unknown): string => (d as { color: string }).color,\n  pointRadius: undefined,\n  pointLabel: undefined,\n  pointLabelColor: undefined,\n  pointBottomLabel: '',\n  pointCursor: null,\n  pointRingWidth: 1.25,\n  selectedPointId: undefined,\n\n  // Cluster\n  clusterColor: undefined,\n  clusterRadius: undefined,\n  clusterLabel: <Datum extends GenericDataRecord>(d: LeafletMapClusterDatum<Datum>): string => `${d.point_count}`,\n  clusterLabelColor: undefined,\n  clusterBottomLabel: '',\n  clusterRingWidth: 1.25,\n  clusterBackground: true,\n  clusterExpandOnClick: true,\n  clusteringDistance: 55,\n  colorMap: {},\n\n  // TopoJSON Overlay\n  topoJSONLayer: {\n    sources: undefined,\n    fillOpacity: 0.6,\n    strokeOpacity: 0.8,\n    strokeWidth: 1,\n    featureName: undefined,\n    fillProperty: undefined,\n    strokeProperty: undefined,\n  },\n\n  // Misc\n  tooltip: undefined,\n  ariaLabel: undefined,\n}\n"],"names":[],"mappings":";;;AAAA;AA6KO,MAAM,uBAAuB,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC/B,sBAAsB,CAAA,EAAA;;AAEzB,IAAA,KAAK,EAAE,SAAS,EAChB,MAAM,EAAE,SAAS,EACjB,aAAa,EAAE,IAAI,EACnB,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAC1B,YAAY,EAAE,GAAG,EACjB,aAAa,EAAE,SAAS,EACxB,iBAAiB,EAAE,SAAS,EAC5B,aAAa,EAAE,IAAI,EACnB,eAAe,EAAE,KAAK,EACtB,WAAW,EAAE,CAAC,kGAAkG,CAAC,EACjH,WAAW,EAAE,EAAE,EACf,KAAK,EAAE,SAAS,EAChB,cAAc,EAAE,SAAS,EACzB,QAAQ,EAAE,kBAAkB,CAAC,QAAQ;;IAGrC,gBAAgB,EAAE,SAAS,EAC3B,aAAa,EAAE,SAAS,EACxB,cAAc,EAAE,SAAS,EACzB,YAAY,EAAE,SAAS,EACvB,cAAc,EAAE,SAAS,EACzB,YAAY,EAAE,SAAS,EACvB,UAAU,EAAE,SAAS;;AAGrB,IAAA,cAAc,EAAE,CAAC,CAAU,KAAc,CAA2B,CAAC,SAAS,EAC9E,aAAa,EAAE,CAAC,CAAU,KAAc,CAA0B,CAAC,QAAQ,EAC3E,OAAO,EAAE,CAAC,CAAU,KAAc,CAAoB,CAAC,EAAE,EACzD,UAAU,EAAE,CAAC,CAAU,KAAc,CAAuB,CAAC,KAAK,EAClE,UAAU,EAAE,CAAC,CAAU,KAAc,CAAuB,CAAC,KAAK,EAClE,WAAW,EAAE,SAAS,EACtB,UAAU,EAAE,SAAS,EACrB,eAAe,EAAE,SAAS,EAC1B,gBAAgB,EAAE,EAAE,EACpB,WAAW,EAAE,IAAI,EACjB,cAAc,EAAE,IAAI,EACpB,eAAe,EAAE,SAAS;;IAG1B,YAAY,EAAE,SAAS,EACvB,aAAa,EAAE,SAAS,EACxB,YAAY,EAAE,CAAkC,CAAgC,KAAa,CAAG,EAAA,CAAC,CAAC,WAAW,CAAA,CAAE,EAC/G,iBAAiB,EAAE,SAAS,EAC5B,kBAAkB,EAAE,EAAE,EACtB,gBAAgB,EAAE,IAAI,EACtB,iBAAiB,EAAE,IAAI,EACvB,oBAAoB,EAAE,IAAI,EAC1B,kBAAkB,EAAE,EAAE,EACtB,QAAQ,EAAE,EAAE;;AAGZ,IAAA,aAAa,EAAE;AACb,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,WAAW,EAAE,GAAG;AAChB,QAAA,aAAa,EAAE,GAAG;AAClB,QAAA,WAAW,EAAE,CAAC;AACd,QAAA,WAAW,EAAE,SAAS;AACtB,QAAA,YAAY,EAAE,SAAS;AACvB,QAAA,cAAc,EAAE,SAAS;AAC1B,KAAA;;AAGD,IAAA,OAAO,EAAE,SAAS,EAClB,SAAS,EAAE,SAAS;;;;"}