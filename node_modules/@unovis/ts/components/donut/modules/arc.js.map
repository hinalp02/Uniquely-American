{"version":3,"file":"arc.js","sources":["../../../../src/components/donut/modules/arc.ts"],"sourcesContent":["import { Selection } from 'd3-selection'\nimport { Transition } from 'd3-transition'\nimport { interpolate } from 'd3-interpolate'\nimport { Arc } from 'd3-shape'\n\n// Utils\nimport { getColor } from 'utils/color'\nimport { smartTransition } from 'utils/d3'\n\n// Local Types\nimport { DonutArcDatum, DonutArcAnimState } from '../types'\n\n// Config\nimport { DonutConfigInterface } from '../config'\n\nexport interface ArcNode extends SVGElement {\n  _animState?: DonutArcAnimState;\n}\n\nexport function createArc<Datum> (\n  selection: Selection<SVGPathElement, DonutArcDatum<Datum>, SVGGElement, unknown>,\n  config: DonutConfigInterface<Datum>\n): void {\n  selection\n    .style('fill', d => getColor(d.data, config.color, d.index))\n    .style('opacity', 0)\n    .each((d, i, els) => {\n      const arcNode: ArcNode = els[i]\n      const angleCenter = (d.startAngle + d.endAngle) / 2\n      const angleHalfWidth = (d.endAngle - d.startAngle) / 2\n      arcNode._animState = {\n        startAngle: angleCenter - angleHalfWidth,\n        endAngle: angleCenter + angleHalfWidth,\n        innerRadius: d.innerRadius,\n        outerRadius: d.outerRadius,\n        padAngle: d.padAngle,\n      }\n    })\n}\n\nexport function updateArc<Datum> (\n  selection: Selection<SVGPathElement, DonutArcDatum<Datum>, SVGGElement, unknown>,\n  config: DonutConfigInterface<Datum>,\n  arcGen: Arc<any, DonutArcAnimState>,\n  duration: number\n): void {\n  selection\n    .style('transition', `fill ${duration}ms`) // Animate color with CSS because we're using CSS-variables\n    .style('fill', d => getColor(d.data, config.color, d.index))\n\n  const setOpacity = (d: DonutArcDatum<Datum>): number => (config.showEmptySegments || d.value) ? 1 : 0\n  if (duration) {\n    const transition = smartTransition(selection, duration)\n      .style('opacity', setOpacity) as Transition<SVGPathElement, DonutArcDatum<Datum>, SVGGElement, unknown>\n\n    transition.attrTween('d', (d, i, els) => {\n      const arcNode: ArcNode = els[i]\n      const nextAnimState: DonutArcAnimState = {\n        startAngle: d.startAngle,\n        endAngle: d.endAngle,\n        innerRadius: d.innerRadius,\n        outerRadius: d.outerRadius,\n        padAngle: d.padAngle,\n      }\n      const datum = interpolate(arcNode._animState, nextAnimState)\n\n      return (t: number): string => {\n        arcNode._animState = datum(t)\n        return arcGen(arcNode._animState as DonutArcDatum<Datum>)\n      }\n    })\n  } else {\n    selection\n      .attr('d', arcGen)\n      .style('opacity', setOpacity)\n  }\n}\n\nexport function removeArc<Datum> (\n  selection: Selection<SVGPathElement, DonutArcDatum<Datum>, SVGGElement, unknown>,\n  duration: number\n): void {\n  smartTransition(selection, duration)\n    .style('opacity', 0)\n    .remove()\n}\n"],"names":[],"mappings":"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"}