{"version":3,"file":"utils.js","sources":["../../../../src/components/scatter/modules/utils.ts"],"sourcesContent":["import { select, Selection } from 'd3-selection'\nimport { Position } from 'types/position'\n\n// Utils\nimport { rectIntersect } from 'utils/misc'\nimport { estimateStringPixelLength } from 'utils/text'\nimport { getValue } from 'utils/data'\n\n// Types\nimport { ContinuousScale } from 'types/scale'\nimport { Rect } from 'types/misc'\n\n// Local Types\nimport { ScatterPoint, ScatterPointGroupNode } from '../types'\n\n// Config\nimport { ScatterConfigInterface } from '../config'\n\nexport function isLabelPositionCenter (labelPosition: Position | `${Position}`): boolean {\n  return (labelPosition !== Position.Top) && (labelPosition !== Position.Bottom) &&\n  (labelPosition !== Position.Left) && (labelPosition !== Position.Right)\n}\n\nexport function getCentralLabelFontSize (pointDiameter: number, textLength: number): number {\n  return textLength ? 0.7 * pointDiameter / Math.pow(textLength, 0.5) : 0\n}\n\nexport function getLabelShift (\n  labelPosition: `${Position}`,\n  pointDiameter: number,\n  labelPadding = 5\n): [number, number] {\n  switch (labelPosition) {\n    case Position.Top:\n      return [0, -pointDiameter / 2 - labelPadding]\n    case Position.Bottom:\n      return [0, pointDiameter / 2 + labelPadding]\n    case Position.Left:\n      return [-pointDiameter / 2 - labelPadding, 0]\n    case Position.Right:\n      return [pointDiameter / 2 + labelPadding, 0]\n    default:\n      return [0, 0]\n  }\n}\n\nexport function getEstimatedLabelBBox<Datum> (\n  d: ScatterPoint<Datum>,\n  labelPosition: Position | `${Position}`,\n  xScale: ContinuousScale,\n  yScale: ContinuousScale,\n  fontSizePx: number\n): Rect {\n  const x = xScale(d._point.xValue)\n  const y = yScale(d._point.yValue)\n  const pointDiameter = d._point.sizePx\n\n  const pointLabelText = d._point.label ?? ''\n  const textLength = pointLabelText.length\n  const centralLabelFontSize = getCentralLabelFontSize(pointDiameter, textLength)\n\n  const width = estimateStringPixelLength(pointLabelText, isLabelPositionCenter(labelPosition) ? centralLabelFontSize : fontSizePx, 0.6)\n  const height = fontSizePx\n\n  const labelShift = getLabelShift(labelPosition, pointDiameter)\n  const dx = labelPosition === Position.Left ? -width\n    : labelPosition === Position.Right ? 0 : -width / 2\n  const dy = labelPosition === Position.Top ? -height\n    : labelPosition === Position.Bottom ? 0 : -height / 2\n\n  const bbox: Rect = {\n    x: x + labelShift[0] + dx,\n    y: y + labelShift[1] + dy,\n    width: width,\n    height: height,\n  }\n\n  return bbox\n}\n\nexport function collideLabels<Datum> (\n  selection: Selection<SVGGElement, ScatterPoint<Datum>, SVGGElement, ScatterPoint<Datum>[]>,\n  config: ScatterConfigInterface<Datum>,\n  xScale: ContinuousScale,\n  yScale: ContinuousScale\n): void {\n  // Reset visibility of all labels\n  selection.each((datum1: ScatterPoint<Datum>, i, elements) => {\n    const node = elements[i] as ScatterPointGroupNode\n    node._labelVisible = true\n  })\n\n  // Run collision detection and set labels visibility\n  selection.each((datum1: ScatterPoint<Datum>, i, elements) => {\n    const group1Node = elements[i] as ScatterPointGroupNode\n    const label1Position = getValue(datum1, config.labelPosition, datum1._point.pointIndex)\n    if (!group1Node._labelVisible || isLabelPositionCenter(label1Position as Position)) return\n\n    const label1 = select<SVGGElement, ScatterPoint<Datum>>(group1Node).select<SVGTextElement>('text')\n    const label1FontSize = Number.parseFloat(window.getComputedStyle(label1.node())?.fontSize)\n\n    // Calculate bounding rect of point's label\n    const label1BoundingRect = getEstimatedLabelBBox(datum1, label1Position as Position, xScale, yScale, label1FontSize)\n\n    for (let j = 0; j < elements.length; j += 1) {\n      if (i === j) continue\n      const group2Node = elements[j] as ScatterPointGroupNode\n      const group2 = select<SVGGElement, ScatterPoint<Datum>>(group2Node)\n      const label2 = group2.select<SVGTextElement>('text')\n      const datum2 = group2.datum()\n\n      // Calculate bounding rect of the second point's circle\n      const p2Pos = [xScale(datum2._point.xValue), yScale(datum2._point.yValue)]\n      const p2Radius = datum2._point.sizePx / 2\n      const point2BoundingRect = {\n        x: p2Pos[0] - p2Radius,\n        y: p2Pos[1] - p2Radius,\n        width: 2 * p2Radius,\n        height: 2 * p2Radius,\n      }\n\n      let intersect = rectIntersect(label1BoundingRect, point2BoundingRect, 2)\n\n      // If there's no intersection, check for collision with the second point's label\n      const label2Visible = group2Node._labelVisible\n      if (!intersect && label2Visible) {\n        const label2FontSize = Number.parseFloat(window.getComputedStyle(label2.node())?.fontSize)\n        const label2Position = getValue(datum2, config.labelPosition, datum2._point.pointIndex)\n        const label2BoundingRect = getEstimatedLabelBBox(datum2, label2Position as Position, xScale, yScale, label2FontSize)\n\n        intersect = rectIntersect(label1BoundingRect, label2BoundingRect, 0.25)\n      }\n\n      if (intersect) {\n        if (group1Node._forceShowLabel) group2Node._labelVisible = false\n        else {\n          group1Node._labelVisible = false\n          break\n        }\n      }\n    }\n  })\n\n  // Hide the overlapping labels\n  selection.each((datum1: ScatterPoint<Datum>, i, elements) => {\n    const node = elements[i] as ScatterPointGroupNode\n    const label = select<SVGGElement, ScatterPoint<Datum>>(node).select<SVGTextElement>('text')\n    label.attr('opacity', node._labelVisible ? 1 : 0)\n  })\n}\n"],"names":[],"mappings":"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"}