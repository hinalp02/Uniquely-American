{"version":3,"file":"config.js","sources":["../../../src/components/scatter/config.ts"],"sourcesContent":["// Core\nimport { XYComponentConfigInterface, XYComponentDefaultConfig } from 'core/xy-component/config'\n\n// Types\nimport { Scale, ContinuousScale } from 'types/scale'\nimport { SymbolType } from 'types/symbol'\nimport { ColorAccessor, GenericAccessor, NumericAccessor, StringAccessor } from 'types/accessor'\nimport { Position } from 'types/position'\n\nexport interface ScatterConfigInterface<Datum> extends XYComponentConfigInterface<Datum> {\n  /** Point color accessor function. Default: `d => d.color` */\n  color?: ColorAccessor<Datum>;\n  /**\n   * Size of the scatter plot marker (e.g. diameter if `SymbolType.Circle` is used for `shape`) in pixels.\n   * Can be a constant value or an accessor function. But if `sizeRange` is set, then the values will be treated\n   * as an input to `sizeScale`, and the resulting size will be different.\n   * Default: `10`\n  */\n  size?: NumericAccessor<Datum>;\n  /** Size scale to be used if the `sizeRange` was set. Default: `Scale.scaleSqrt()` */\n  sizeScale?: ContinuousScale;\n  /** Size range in the format of `[number, number]` to rescale the input values. Default: `undefined` */\n  sizeRange?: [number, number];\n  /** Shape of the scatter point. Accessor function or constant value: `SymbolType.Circle`, `SymbolType.Cross`, `SymbolType.Diamond`, `SymbolType.Square`,\n   * `SymbolType.Star`, `SymbolType.Triangle` or `SymbolType.Wye`.\n   * Default: `SymbolType.Circle` */\n  shape?: ((d: Datum, i?: number, ...any: unknown[]) => (SymbolType | string)) | SymbolType | string;\n  /** Label accessor function or string. Default: `undefined` */\n  label?: StringAccessor<Datum>;\n  /** Label color. Default: `undefined` */\n  labelColor?: ColorAccessor<Datum>;\n  /** Hide overlapping labels. Default: `true` */\n  labelHideOverlapping?: boolean;\n  /** Optional point cursor. Default: `null` */\n  cursor?: StringAccessor<Datum>;\n  /** Point color brightness ratio for switching between dark and light text label color. Default: `0.65` */\n  labelTextBrightnessRatio?: number;\n  /** Label position. Default: `Position.Bottom` */\n  labelPosition?: GenericAccessor<Position | string, Datum>;\n  /** Point stroke color. Default: `undefined` */\n  strokeColor?: ColorAccessor<Datum>;\n  /** Point stroke width. Default: `undefined` */\n  strokeWidth?: NumericAccessor<Datum>;\n}\n\nexport const ScatterDefaultConfig: ScatterConfigInterface<unknown> = {\n  ...XYComponentDefaultConfig,\n  color: (d: unknown): string => (d as { color: string }).color,\n  size: 10,\n  sizeScale: Scale.scaleSqrt(),\n  sizeRange: undefined,\n  shape: SymbolType.Circle,\n  label: undefined,\n  labelColor: undefined,\n  labelPosition: Position.Bottom,\n  labelHideOverlapping: true,\n  cursor: null,\n  labelTextBrightnessRatio: 0.65,\n  strokeColor: undefined,\n  strokeWidth: undefined,\n}\n\n"],"names":[],"mappings":";;;;;AAAA;AA6CO,MAAM,oBAAoB,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC5B,wBAAwB,CAC3B,EAAA,EAAA,KAAK,EAAE,CAAC,CAAU,KAAc,CAAuB,CAAC,KAAK,EAC7D,IAAI,EAAE,EAAE,EACR,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,EAC5B,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,UAAU,CAAC,MAAM,EACxB,KAAK,EAAE,SAAS,EAChB,UAAU,EAAE,SAAS,EACrB,aAAa,EAAE,QAAQ,CAAC,MAAM,EAC9B,oBAAoB,EAAE,IAAI,EAC1B,MAAM,EAAE,IAAI,EACZ,wBAAwB,EAAE,IAAI,EAC9B,WAAW,EAAE,SAAS,EACtB,WAAW,EAAE,SAAS;;;;"}