{"version":3,"file":"index.js","sources":["../../../src/components/leaflet-flow-map/index.ts"],"sourcesContent":["import { select } from 'd3-selection'\n\nimport { ComponentCore } from 'core/component'\nimport { ComponentType } from 'types/component'\n\n// Utils\nimport { ResizeObserver } from 'utils/resize-observer'\nimport { getNumber, throttle } from 'utils/data'\nimport { getDataLatLngBounds } from 'utils/map'\nimport { getColor } from 'utils/color'\n\n// Components\nimport { LeafletMap } from 'components/leaflet-map'\n\n// Types\nimport { Bounds } from 'components/leaflet-map/types'\nimport { GenericDataRecord } from 'types/data'\n\n// Config\nimport { LeafletFlowMapDefaultConfig, LeafletFlowMapConfigInterface } from './config'\n\n// Local Types\nimport { LatLon, Particle } from './types'\n\n// Renderer\nimport { PointRenderer as PointRendererType } from './renderer'\n\nexport class LeafletFlowMap<\n  PointDatum extends GenericDataRecord,\n  FlowDatum extends GenericDataRecord,\n> extends ComponentCore<\n  { points: PointDatum[]; flows?: FlowDatum[] },\n  LeafletFlowMapConfigInterface<PointDatum, FlowDatum>\n  > {\n  static selectors = LeafletMap.selectors\n  protected _defaultConfig = LeafletFlowMapDefaultConfig as LeafletFlowMapConfigInterface<PointDatum, FlowDatum>\n  public config: LeafletFlowMapConfigInterface<PointDatum, FlowDatum> = this._defaultConfig\n\n  type = ComponentType.HTML\n  private leafletMap: LeafletMap<PointDatum>\n  private leafletMapInstance: L.Map\n  private flows: FlowDatum[] = []\n  private points: PointDatum[] = []\n  private hoveredSourcePoint: FlowDatum | undefined\n  private onCanvasMouseMoveBound = throttle(this.onCanvasMouseMove.bind(this), 60)\n  private onCanvasClickBound = this.onCanvasClick.bind(this)\n  private canvasElement: HTMLCanvasElement | undefined\n  private panningOffset = { x: 0, y: 0 }\n\n  private resizeObserver: ResizeObserver | undefined\n  private renderer: PointRendererType | undefined\n  particles: Particle[] = []\n\n  constructor (container: HTMLDivElement, config?: LeafletFlowMapConfigInterface<PointDatum, FlowDatum>, data?: { points: PointDatum[]; flows?: FlowDatum[] }) {\n    super(ComponentType.HTML)\n\n    this.leafletMap = new LeafletMap<PointDatum>(container, config, data?.points ?? [])\n\n    const rendererImportPromise = import('./renderer')\n    Promise.all([rendererImportPromise, this.leafletMap.getLeafletInstancePromise()])\n      .then((imports) => {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        const [{ PointRenderer }, leaflet] = imports\n\n        this.leafletMapInstance = leaflet\n        const canvasContainer = this.leafletMapInstance.getPanes().overlayPane as HTMLDivElement\n\n        // Initialize renderer\n        const canvas = select(canvasContainer).insert('canvas', ':first-child')\n        this.canvasElement = canvas.node()\n        this.renderer = new PointRenderer(canvasContainer, container.offsetWidth, container.offsetHeight, this.canvasElement)\n        this.canvasElement.addEventListener('mousemove', this.onCanvasMouseMoveBound)\n        this.canvasElement.addEventListener('click', this.onCanvasClickBound)\n\n        this.leafletMap._onMapMoveEndInternal = this.onMapMove.bind(this)\n\n        // Update renderer size on container resize\n        this.resizeObserver = new ResizeObserver(() => {\n          this.renderer.setSize(container.offsetWidth, container.offsetHeight)\n        })\n        this.resizeObserver.observe(container)\n\n        if (config) this.setConfig(config)\n        if (data) this.setData(data)\n        this.animate()\n      })\n  }\n\n  setConfig (config: LeafletFlowMapConfigInterface<PointDatum, FlowDatum>): void {\n    super.setConfig(config)\n    this.leafletMap.setConfig({ ...config, clusteringDistance: 0 })\n  }\n\n  setData (data: { points: PointDatum[]; flows?: FlowDatum[] }): void {\n    super.setData(data)\n    this.flows = data.flows\n    this.points = data.points\n    this.initParticles()\n    this.leafletMap.setData(this.points)\n    this.render()\n  }\n\n  render (): void {\n    super.render()\n  }\n\n  initParticles (): void {\n    this.clearParticles()\n    for (const flow of this.flows) {\n      const source = {\n        lat: getNumber(flow, this.config.sourceLatitude),\n        lon: getNumber(flow, this.config.sourceLongitude),\n      }\n\n      const target = {\n        lat: getNumber(flow, this.config.targetLatitude),\n        lon: getNumber(flow, this.config.targetLongitude),\n      }\n\n      // Add source particle, showing the origin of the flow\n      const sourcePointRadius = getNumber(flow, this.config.sourcePointRadius)\n      const sourcePointColor = getColor(flow, this.config.sourcePointColor)\n      this.addParticle(source, source, source, 0, sourcePointRadius, sourcePointColor)\n\n      // Add flow particles\n      const dist = Math.sqrt((target.lat - source.lat) ** 2 + (target.lon - source.lon) ** 2)\n      const numParticles = Math.round(dist * getNumber(flow, this.config.flowParticleDensity))\n      const velocity = getNumber(flow, this.config.flowParticleSpeed)\n      const r = getNumber(flow, this.config.flowParticleRadius)\n      const color = getColor(flow, this.config.flowParticleColor)\n      for (let i = 0; i < numParticles; i += 1) {\n        const location = {\n          lat: source.lat + (target.lat - source.lat) * i / numParticles,\n          lon: source.lon + (target.lon - source.lon) * i / numParticles,\n        }\n        this.addParticle(source, target, location, velocity, r, color)\n      }\n    }\n\n    this.renderer?.update(this.particles)\n  }\n\n  private addParticle (source: LatLon, target: LatLon, location = source, velocity = 0.05, r = 0.75, color?: string): void {\n    const x = 0\n    const y = 0\n    this.particles.push({ x, y, source, target, location, velocity, r, color })\n  }\n\n  private clearParticles (): void {\n    this.particles = []\n  }\n\n  private animate (): void {\n    const map = this.leafletMapInstance\n\n    requestAnimationFrame(() => {\n      const zoomLevel = map?.getZoom()\n      for (const p of this.particles) {\n        const fullDist = Math.sqrt((p.target.lat - p.source.lat) ** 2 + (p.target.lon - p.source.lon) ** 2)\n        const remainedDist = Math.sqrt((p.target.lat - p.location.lat) ** 2 + (p.target.lon - p.location.lon) ** 2)\n        const angle = Math.atan2(p.target.lat - p.source.lat, p.target.lon - p.source.lon)\n        p.location.lat += p.velocity * Math.sin(angle)\n        p.location.lon += p.velocity * Math.cos(angle)\n\n        if (\n          (((p.target.lat > p.source.lat) && (p.location.lat > p.target.lat)) || ((p.target.lon > p.source.lon) && (p.location.lon > p.target.lon))) ||\n          (((p.target.lat < p.source.lat) && (p.location.lat < p.target.lat)) || ((p.target.lon < p.source.lon) && (p.location.lon < p.target.lon)))\n        ) {\n          p.location.lat = p.source.lat\n          p.location.lon = p.source.lon\n        }\n\n        const pos = map?.latLngToLayerPoint([p.location.lat, p.location.lon])\n        const orthogonalArcShift = -(zoomLevel ** 2 * fullDist / 8) * Math.cos(Math.PI / 2 * (fullDist / 2 - remainedDist) / (fullDist / 2)) || 0\n        p.x = pos?.x - this.panningOffset.x\n        p.y = pos?.y + orthogonalArcShift - this.panningOffset.y\n      }\n\n      this.renderer.updatePointsPosition(this.particles)\n      this.renderer.draw()\n      this.animate()\n    })\n  }\n\n  private getPointByScreenPos (x: number, y: number): [FlowDatum, number, number] | [] {\n    const map = this.leafletMapInstance\n\n    for (const flow of this.flows) {\n      const lat = getNumber(flow, this.config.sourceLatitude)\n      const lon = getNumber(flow, this.config.sourceLongitude)\n      const r = getNumber(flow, this.config.sourcePointRadius)\n      const pos = map?.latLngToLayerPoint([lat, lon])\n      const posX = pos.x - this.panningOffset.x\n      const posY = pos.y - this.panningOffset.y\n\n      if ((Math.abs(x - posX) < r) && (Math.abs(y - posY) < r)) {\n        return [flow, posX, posY]\n      }\n    }\n\n    return []\n  }\n\n  private onCanvasMouseMove (event: MouseEvent): void {\n    const { config } = this\n\n    this.canvasElement.style.removeProperty('cursor')\n    const [hoveredPoint, x, y] = this.getPointByScreenPos(event.offsetX, event.offsetY)\n    if (hoveredPoint) this.canvasElement.style.cursor = 'default'\n\n    if (this.hoveredSourcePoint !== hoveredPoint) {\n      if (hoveredPoint) config.onSourcePointMouseEnter?.(hoveredPoint, x, y, event)\n      if (this.hoveredSourcePoint) config.onSourcePointMouseLeave?.(this.hoveredSourcePoint, event)\n      this.hoveredSourcePoint = hoveredPoint\n    }\n  }\n\n  private onCanvasClick (event: MouseEvent): void {\n    const { config } = this\n\n    const [clickedPoint, x, y] = this.getPointByScreenPos(event.offsetX, event.offsetY)\n    if (clickedPoint) config.onSourcePointClick?.(clickedPoint, x, y, event)\n  }\n\n  private onMapMove (leaflet: L.Map): void {\n    const shift = leaflet.containerPointToLayerPoint([0, 0])\n    this.panningOffset.x = shift.x\n    this.panningOffset.y = shift.y\n    this.canvasElement.style.transform = `translate(${shift.x}px, ${shift.y}px)`\n  }\n\n  public destroy (): void {\n    this.resizeObserver?.disconnect()\n    this.renderer?.destroy()\n    this.canvasElement?.removeEventListener('mousemove', this.onCanvasMouseMoveBound)\n    this.canvasElement?.removeEventListener('click', this.onCanvasClickBound)\n    super.destroy()\n  }\n\n  // Leaflet Map useful methods\n  public selectPointById (id: string, centerPoint = false): void { this.leafletMap.selectPointById(id, centerPoint) }\n  public getSelectedPointId (): string | number | undefined { return this.leafletMap.getSelectedPointId() }\n  public unselectPoint (): void { this.leafletMap.unselectPoint() }\n  public zoomToPointById (id: string, selectNode = false, customZoomLevel?: number): void { this.leafletMap.zoomToPointById(id, selectNode, customZoomLevel) }\n  public zoomIn (increment = 1): void { this.leafletMap.zoomIn(increment) }\n  public zoomOut (increment = 1): void { this.leafletMap.zoomOut(increment) }\n  public setZoom (zoomLevel: number): void { this.leafletMap.setZoom(zoomLevel) }\n  public fitView (): void {\n    const points: { lat: number; lon: number }[] = []\n\n    for (const point of this.points) {\n      points.push({\n        lat: getNumber(point, this.config.pointLatitude),\n        lon: getNumber(point, this.config.pointLongitude),\n      })\n    }\n\n    for (const flow of this.flows) {\n      const source = {\n        lat: getNumber(flow, this.config.sourceLatitude),\n        lon: getNumber(flow, this.config.sourceLongitude),\n      }\n\n      const target = {\n        lat: getNumber(flow, this.config.targetLatitude),\n        lon: getNumber(flow, this.config.targetLongitude),\n      }\n\n      points.push(source)\n      points.push(target)\n    }\n\n    const boundsArray = getDataLatLngBounds(points, d => d.lat, d => d.lon, 0)\n    const bounds: Bounds = {\n      northEast: { lat: boundsArray[0][0], lng: boundsArray[1][1] },\n      southWest: { lat: boundsArray[1][0], lng: boundsArray[0][1] },\n    }\n    this.leafletMap.fitToBounds(bounds)\n  }\n}\n"],"names":[],"mappings":"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"}