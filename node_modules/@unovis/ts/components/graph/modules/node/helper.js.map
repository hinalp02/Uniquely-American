{"version":3,"file":"helper.js","sources":["../../../../../src/components/graph/modules/node/helper.ts"],"sourcesContent":["import { BaseType, Selection } from 'd3-selection'\nimport { interpolate } from 'd3-interpolate'\nimport { max, mean } from 'd3-array'\nimport { Arc } from 'd3-shape'\n\n// Types\nimport { ColorAccessor, NumericAccessor } from 'types/accessor'\nimport { GraphInputLink, GraphInputNode } from 'types/graph'\n\n// Utils\nimport { scoreRectPath } from 'utils/path'\nimport { isEmpty, isNil, getNumber, getString } from 'utils/data'\nimport { getColor, getHexValue, hexToBrightness } from 'utils/color'\n\n// Local Types\nimport { GraphNode, GraphCircleLabel, GraphNodeAnimatedElement, GraphNodeAnimationState, GraphNodeShape } from '../../types'\n\n// Config\nimport { GraphConfigInterface } from '../../config'\n\nexport const NODE_SIZE = 30\nexport const LABEL_RECT_HORIZONTAL_PADDING = 10\nexport const LABEL_RECT_VERTICAL_PADDING = 4\n\nexport function getNodeSize<T> (d: T, nodeSizeAccessor: NumericAccessor<T>, index: number): number {\n  return getNumber(d, nodeSizeAccessor, index) || NODE_SIZE\n}\n\nfunction _setInitialAnimState (el: GraphNodeAnimatedElement<SVGElement>, index: number): void {\n  el._animState = {\n    endAngle: 0,\n    nodeIndex: index,\n  }\n}\n\n// Animate the arc around node with keeping\n// the current anim state info\nexport function arcTween<N extends GraphInputNode, L extends GraphInputLink> (\n  d: GraphNode<N, L>,\n  config: GraphConfigInterface<N, L>,\n  arcConstructor: Arc<any, GraphNodeAnimationState>,\n  el: GraphNodeAnimatedElement<SVGElement>\n): (t: number) => string {\n  const { nodeStrokeWidth, nodeSize, nodeGaugeValue } = config\n  if (!el._animState) _setInitialAnimState(el, d._index)\n\n  const i = interpolate(el._animState, {\n    endAngle: 2 * Math.PI * (getNumber(d, nodeGaugeValue, d._index) ?? 0) / 100,\n    nodeIndex: d._index,\n    nodeSize: getNodeSize(d, nodeSize, d._index),\n    borderWidth: getNumber(d, nodeStrokeWidth, d._index),\n  })\n  el._animState = i(0)\n\n  return (t: number): string => {\n    el._animState = i(t)\n    return arcConstructor(el._animState)\n  }\n}\n\nexport function polyTween<N extends GraphInputNode, L extends GraphInputLink> (\n  d: GraphNode<N, L>,\n  config: GraphConfigInterface<N, L>,\n  polygonConstructor: (nodeSize: number, nEdges?: number, endAngle?: number, isOpen?: boolean) => string,\n  el: GraphNodeAnimatedElement<SVGElement>\n): (t: number) => string {\n  const { nodeShape, nodeGaugeValue } = config\n  const nodeSize = getNodeSize(d, config.nodeSize, d._index)\n  let n: number\n  switch (getString(d, nodeShape, d._index)) {\n    case GraphNodeShape.Square:\n      n = 4\n      break\n    case GraphNodeShape.Triangle:\n      n = 3\n      break\n    case GraphNodeShape.Hexagon:\n    default:\n      n = 6\n  }\n\n  if (!el._animState) _setInitialAnimState(el, d._index)\n  const i = interpolate(el._animState, {\n    endAngle: 2 * Math.PI * (getNumber(d, nodeGaugeValue, d._index) ?? 0) / 100,\n    nodeIndex: d._index,\n  })\n  el._animState = i(0)\n\n  return (t: number): string => {\n    el._animState = i(t)\n    return n === 4 ? scoreRectPath({\n      x: -nodeSize / 2,\n      y: -nodeSize / 2,\n      w: nodeSize,\n      h: nodeSize,\n      r: 5,\n      score: el._animState.endAngle / (2 * Math.PI),\n    }) : polygonConstructor(nodeSize, n, el._animState.endAngle, true)\n  }\n}\n\nexport function setLabelRect<T, K extends BaseType, L> (\n  labelSelection: Selection<SVGGElement, T, K, L>,\n  label: string,\n  selector: string\n): Selection<SVGRectElement, T, K, L> {\n  // Set label background rectangle size by text size\n  const labelIsEmpty = isEmpty(label)\n  const labelTextSelection = labelSelection.select<SVGTextElement>(`.${selector}`)\n  const labelTextBBox = (labelTextSelection.node() as SVGGraphicsElement).getBBox()\n  const backgroundRect = labelSelection.select<SVGRectElement>('rect')\n    .attr('visibility', labelIsEmpty ? 'hidden' : null)\n    .attr('rx', 4)\n    .attr('ry', 4)\n    .attr('x', -labelTextBBox.width / 2 - LABEL_RECT_HORIZONTAL_PADDING)\n    .attr('y', '-0.64em')\n    .attr('width', labelTextBBox.width + 2 * LABEL_RECT_HORIZONTAL_PADDING)\n    .attr('height', labelTextBBox.height + 2 * LABEL_RECT_VERTICAL_PADDING)\n    .style('transform', `translateY(${-LABEL_RECT_VERTICAL_PADDING}px)`)\n\n  return backgroundRect\n}\n\nexport function getX (node: GraphNode): number {\n  return node._state && !isNil(node._state.fx) ? node._state.fx : node.x\n}\n\nexport function getY (node: GraphNode): number {\n  return node._state && !isNil(node._state.fy) ? node._state.fy : node.y\n}\n\nexport function configuredNodeSize<T> (nodeSizeAccessor: NumericAccessor<T>): number {\n  return typeof nodeSizeAccessor === 'number' ? nodeSizeAccessor : NODE_SIZE\n}\n\nexport function getMaxNodeSize<T> (data: T[], nodeSize: NumericAccessor<T>): number {\n  return max(data || [], (d, i) => getNodeSize(d, nodeSize, i)) || NODE_SIZE\n}\n\nexport function getAverageNodeSize<T> (data: T[], nodeSize: NumericAccessor<T>): number {\n  return mean(data || [], (d, i) => getNodeSize(d, nodeSize, i)) || NODE_SIZE\n}\n\nexport function getSideLabelTextColor (label: GraphCircleLabel, context: SVGElement): string {\n  if (!label.color) return null\n\n  const hex = getHexValue(label.color, context)\n  const brightness = hexToBrightness(hex)\n  return brightness > 0.65 ? 'var(--vis-graph-node-side-label-fill-color-dark)' : 'var(--vis-graph-node-side-label-fill-color-bright)'\n}\n\nexport function getNodeColor<T> (d: T, colorAccessor: ColorAccessor<T>, index: number): string {\n  return getColor(d, colorAccessor, index, true) ?? null\n}\n\nexport function getNodeIconColor<T> (d: T, colorAccessor: ColorAccessor<T>, index: number, context: SVGElement): string {\n  const nodeColor = getNodeColor(d, colorAccessor, index)\n  if (!nodeColor) return null\n\n  const hex = getHexValue(nodeColor, context)\n  const brightness = hexToBrightness(hex)\n  return brightness > 0.65 ? 'var(--vis-graph-node-icon-fill-color-dark)' : 'var(--vis-graph-node-icon-fill-color-bright)'\n}\n"],"names":[],"mappings":"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"}