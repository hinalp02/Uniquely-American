{"version":3,"file":"layout-helpers.js","sources":["../../../../src/components/graph/modules/layout-helpers.ts"],"sourcesContent":["// Types\nimport type { ElkNode } from 'elkjs/lib/elk.bundled.js'\nimport { GraphInputLink, GraphInputNode } from 'types/graph'\nimport { GenericAccessor } from 'types/accessor'\n\n// Utils\nimport { getValue, isPlainObject, merge } from 'utils/data'\n\n// Local Types\nimport { GraphNode, GraphElkLayoutSettings } from '../types'\n\nexport const DEFAULT_ELK_SETTINGS = {\n  hierarchyHandling: 'INCLUDE_CHILDREN',\n  'nodePlacement.strategy': 'NETWORK_SIMPLEX',\n  'elk.padding': '[top=15.0,left=15.0,bottom=15.0,right=15.0]',\n  'spacing.nodeNodeBetweenLayers': '50',\n  'spacing.edgeNodeBetweenLayers': '50',\n  'spacing.nodeNode': '10',\n}\n\nexport function positionNonConnectedNodes<N extends GraphInputNode, L extends GraphInputLink> (\n  nodes: GraphNode<N, L>[],\n  y: number,\n  spacing: number,\n  width: number,\n  xStart = 0\n): void {\n  nodes.forEach((d, i) => {\n    const x = spacing / 2 + i * spacing\n    const rowIdx = width ? Math.floor(x / width) : 0\n    d.y = (y + rowIdx * spacing) || 0\n    d.x = width ? x % width + xStart : x + xStart\n  })\n}\n\nexport type GraphElkHierarchyNode<N extends GraphInputNode, L extends GraphInputLink> = {\n  id: string;\n  children: GraphNode<N, L>[] | GraphElkHierarchyNode<N, L>;\n  layoutOptions: GraphElkLayoutSettings;\n}\n\nexport type GraphElkHierarchyNodeMap<N extends GraphInputNode, L extends GraphInputLink>\n  = Map<string | undefined | null, GraphNode<N, L>[] | GraphElkHierarchyNodeMap<N, L>>\n\n\nexport function toElkHierarchy<N extends GraphInputNode, L extends GraphInputLink> (\n  d: GraphElkHierarchyNodeMap<N, L> | GraphNode<N, L>[],\n  layoutOptions: GenericAccessor<GraphElkLayoutSettings, string> | undefined\n): (GraphElkHierarchyNode<N, L> | GraphNode<N, L>)[] {\n  if (!(d instanceof Map)) return d\n\n  const hierarchyNode = Array.from(d.entries()).map(([key, value]) => {\n    const children = toElkHierarchy(value, layoutOptions)\n    if (key) {\n      const layoutOps = isPlainObject(layoutOptions) ? DEFAULT_ELK_SETTINGS : merge(DEFAULT_ELK_SETTINGS, getValue(key, layoutOptions))\n      return {\n        id: key,\n        layoutOptions: layoutOps,\n        children,\n      } as GraphElkHierarchyNode<N, L>\n    } else {\n      return children\n    }\n  }).flat()\n\n  return hierarchyNode\n}\n\nexport function adjustElkHierarchyCoordinates (node: ElkNode): void {\n  const parentX = node.x\n  const parentY = node.y\n\n  node.edges?.forEach(edge => {\n    edge.sections?.forEach(section => {\n      section.startPoint.x += parentX\n      section.startPoint.y += parentY\n      section.endPoint.x += parentX\n      section.endPoint.y += parentY\n      section.bendPoints?.forEach(bendPoint => {\n        bendPoint.x += parentX\n        bendPoint.y += parentY\n      })\n    })\n\n    edge.labels?.forEach(label => {\n      label.x += parentX\n      label.y += parentY\n    })\n  })\n\n  node.children?.forEach(child => {\n    child.x += parentX\n    child.y += parentY\n    adjustElkHierarchyCoordinates(child)\n  })\n}\n"],"names":[],"mappings":"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"}