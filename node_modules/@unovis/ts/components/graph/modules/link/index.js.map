{"version":3,"file":"index.js","sources":["../../../../../src/components/graph/modules/link/index.ts"],"sourcesContent":["import { select, Selection } from 'd3-selection'\nimport { range } from 'd3-array'\nimport { Transition } from 'd3-transition'\n\n// Utils\nimport { throttle, getValue, getBoolean } from 'utils/data'\nimport { smartTransition } from 'utils/d3'\nimport { getHref } from 'utils/misc'\n\n// Types\nimport { GraphInputLink, GraphInputNode } from 'types/graph'\n\n// Local Types\nimport { GraphCircleLabel, GraphLink, GraphLinkArrowStyle, GraphLinkStyle } from '../../types'\n\n// Config\nimport { GraphConfigInterface } from '../../config'\n\n// Helpers\nimport { getX, getY } from '../node/helper'\nimport {\n  getPolylineData,\n  getLinkShiftTransform,\n  getLinkLabelShift,\n  getLinkStrokeWidth,\n  getLinkBandWidth,\n  getLinkColor,\n  getLinkLabelTextColor,\n  LINK_LABEL_RADIUS,\n  LINK_MARKER_WIDTH,\n} from './helper'\nimport { ZoomLevel } from '../zoom-levels'\n\n// Styles\nimport * as generalSelectors from '../../style'\nimport * as linkSelectors from './style'\n\nexport function createLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>\n): void {\n  selection.attr('opacity', 0)\n\n  selection.append('line')\n    .attr('class', linkSelectors.linkSupport)\n\n  selection.append('polyline')\n    .attr('class', linkSelectors.link)\n\n  selection.append('line')\n    .attr('class', linkSelectors.linkBand)\n    .attr('x1', d => getX(d.source))\n    .attr('y1', d => getY(d.source))\n    .attr('x2', d => getX(d.target))\n    .attr('y2', d => getY(d.target))\n\n  selection.append('g')\n    .attr('class', linkSelectors.flowGroup)\n    .selectAll(`.${linkSelectors.flowCircle}`)\n    .data(range(0, 6)).enter()\n    .append('circle')\n    .attr('class', linkSelectors.flowCircle)\n\n  selection.append('g')\n    .attr('class', linkSelectors.labelGroups)\n}\n\nexport function updateSelectedLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const isGreyedOut = (d: GraphLink<N, L>, i: number): boolean => getBoolean(d, config.linkDisabled, i) || d._state.greyout\n  selection\n    .classed(linkSelectors.greyout, (d, i) => isGreyedOut(d, i))\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const group = select(element)\n    group.select(`.${linkSelectors.link}`)\n    group.select(`.${linkSelectors.linkBand}`)\n    const linkSupport = group.select(`.${linkSelectors.linkSupport}`)\n\n    linkSupport\n      .style('stroke-opacity', (d._state.hovered || d._state.selected) ? 0.2 : 0)\n      .style('stroke-width',\n        d._state.selected\n          ? getLinkBandWidth(d, scale, config) + 5\n          : d._state.hovered ? getLinkBandWidth(d, scale, config) + 10 : null\n      )\n  })\n}\n\nexport function updateLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number,\n  scale = 1,\n  getMarkerId: (d: GraphLink) => string\n): void {\n  const { linkFlowParticleSize, linkStyle, linkFlow, linkArrow, linkLabel, linkLabelShiftFromCenter } = config\n  if (!selection.size()) return\n\n  selection\n    .classed(\n      linkSelectors.linkDashed,\n      d => getValue<GraphLink<N, L>, GraphLinkStyle>(d, linkStyle, d._indexGlobal) === GraphLinkStyle.Dashed\n    )\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const link = linkGroup.select(`.${linkSelectors.link}`)\n    const linkBand = linkGroup.select(`.${linkSelectors.linkBand}`)\n    const linkSupport = linkGroup.select(`.${linkSelectors.linkSupport}`)\n    const flowGroup = linkGroup.select(`.${linkSelectors.flowGroup}`)\n\n    const x1 = getX(d.source)\n    const y1 = getY(d.source)\n    const x2 = getX(d.target)\n    const y2 = getY(d.target)\n\n    link\n      .attr('class', linkSelectors.link)\n      .attr('marker-mid', getHref(d, getMarkerId))\n      .style('stroke-width', getLinkStrokeWidth(d, scale, config))\n      .style('stroke', getLinkColor(d, config))\n      .attr('transform', getLinkShiftTransform(d, config.linkNeighborSpacing))\n\n    smartTransition(link, duration)\n      .attr('points', getPolylineData({ x1, y1, x2, y2 }))\n\n    linkBand\n      .attr('class', linkSelectors.linkBand)\n      .attr('transform', getLinkShiftTransform(d, config.linkNeighborSpacing))\n      .style('stroke-width', getLinkBandWidth(d, scale, config))\n      .style('stroke', getLinkColor(d, config))\n\n    smartTransition(linkBand, duration)\n      .attr('x1', x1)\n      .attr('y1', y1)\n      .attr('x2', x2)\n      .attr('y2', y2)\n\n    linkSupport\n      .style('stroke', getLinkColor(d, config))\n      .attr('transform', getLinkShiftTransform(d, config.linkNeighborSpacing))\n      .attr('x1', x1)\n      .attr('y1', y1)\n      .attr('x2', x2)\n      .attr('y2', y2)\n\n    flowGroup\n      .attr('transform', getLinkShiftTransform(d, config.linkNeighborSpacing))\n      .style('display', getBoolean(d, linkFlow, d._indexGlobal) ? null : 'none')\n      .style('opacity', 0)\n\n    flowGroup\n      .selectAll(`.${linkSelectors.flowCircle}`)\n      .attr('r', linkFlowParticleSize / scale)\n      .style('fill', getLinkColor(d, config))\n\n    smartTransition(flowGroup, duration)\n      .style('opacity', scale < ZoomLevel.Level2 ? 0 : 1)\n\n    // Labels\n    const labelGroups = linkGroup.selectAll(`.${linkSelectors.labelGroups}`)\n    const labelDatum = getValue<GraphLink<N, L>, GraphCircleLabel>(d, linkLabel, d._indexGlobal)\n    const markerWidth = getValue<GraphLink<N, L>, GraphLinkArrowStyle>(d, linkArrow, d._indexGlobal) ? LINK_MARKER_WIDTH * 2 : 0\n    const labelShift = getBoolean(d, linkLabelShiftFromCenter, d._indexGlobal) ? -markerWidth + 4 : 0\n    const labelTranslate = getLinkLabelShift(d, config.linkNeighborSpacing, labelShift)\n\n    const labels = labelGroups\n      .selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.labelGroup}`)\n      .data(labelDatum && labelDatum.text ? [labelDatum] : [])\n\n    // Enter\n    const labelsEnter = labels.enter().append('g')\n      .attr('class', linkSelectors.labelGroup)\n      .attr('transform', labelTranslate)\n      .style('opacity', 0)\n\n    labelsEnter.append('circle')\n      .attr('class', linkSelectors.labelCircle)\n      .attr('r', 0)\n\n    labelsEnter.append('text')\n      .attr('class', linkSelectors.labelContent)\n\n    // Update\n    const labelsUpdate = labels.merge(labelsEnter)\n\n    smartTransition(labelsUpdate.select(`.${linkSelectors.labelCircle}`), duration)\n      .attr('r', label => label.radius ?? LINK_LABEL_RADIUS)\n      .style('fill', label => label.color)\n\n    labelsUpdate.select(`.${linkSelectors.labelContent}`)\n      .text(label => label.text)\n      .attr('dy', '0.1em')\n      .style('fill', label => label.textColor ?? getLinkLabelTextColor(label))\n      .style('font-size', label => {\n        if (label.fontSize) return label.fontSize\n        const radius = label.radius ?? LINK_LABEL_RADIUS\n        return `${radius / Math.pow(label.text.toString().length, 0.4)}px`\n      })\n\n    smartTransition(labelsUpdate, duration)\n      .attr('transform', labelTranslate)\n      .style('cursor', label => label.cursor)\n      .style('opacity', 1)\n\n    // Exit\n    const labelsExit = labels.exit()\n    smartTransition(labelsExit.select(`.${linkSelectors.labelCircle}`), duration)\n      .attr('r', 0)\n\n    smartTransition(labelsExit, duration)\n      .style('opacity', 0)\n      .remove()\n  })\n\n  if (duration > 0) {\n    selection.attr('pointer-events', 'none')\n    const t = smartTransition(selection, duration) as Transition<SVGGElement, GraphLink<N, L>, SVGGElement, GraphLink<N, L>>\n    t\n      .attr('opacity', 1)\n      .on('end interrupt', (d, i, elements) => {\n        select(elements[i])\n          .attr('pointer-events', 'stroke')\n          .attr('opacity', 1)\n      })\n  } else {\n    selection.attr('opacity', 1)\n  }\n\n  updateSelectedLinks(selection, config, scale)\n}\n\nexport function removeLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number\n): void {\n  smartTransition(selection, duration / 2)\n    .attr('opacity', 0)\n    .remove()\n}\n\nexport function animateLinkFlow<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const { linkFlow } = config\n  if (scale < ZoomLevel.Level2) return\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const flowGroup = linkGroup.select(`.${linkSelectors.flowGroup}`)\n\n    if (!getBoolean(d, linkFlow, d._indexGlobal)) return\n    const t = d._state.flowAnimTime\n    const circles = flowGroup.selectAll(`.${linkSelectors.flowCircle}`)\n\n    circles\n      .attr('transform', index => {\n        const tt = (t + (+index) / (circles.size() - 1)) % 1\n        const x1 = getX(d.source)\n        const y1 = getY(d.source)\n        const x2 = getX(d.target)\n        const y2 = getY(d.target)\n\n        const x = x1 + tt * (x2 - x1)\n        const y = y1 + tt * (y2 - y1)\n        return `translate(${x}, ${y})`\n      })\n  })\n}\n\nexport function zoomLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number,\n  getMarkerId: (d: GraphLink) => string\n): void {\n  const { linkFlowParticleSize } = config\n\n  selection.classed(generalSelectors.zoomOutLevel2, scale < ZoomLevel.Level2)\n  selection.selectAll(`.${linkSelectors.flowCircle}`)\n    .attr('r', linkFlowParticleSize / scale)\n\n  const linkElements = selection.selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.link}`)\n  linkElements\n    .attr('marker-mid', d => getHref(d, getMarkerId))\n    .style('stroke-width', d => getLinkStrokeWidth(d, scale, config))\n\n  const linkBandElements = selection.selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.linkBand}`)\n  linkBandElements\n    .style('stroke-width', d => getLinkBandWidth(d, scale, config))\n}\n\nexport const zoomLinksThrottled = throttle(zoomLinks, 500)\n"],"names":["linkSelectors.linkSupport","linkSelectors.link","linkSelectors.linkBand","linkSelectors.flowGroup","linkSelectors.flowCircle","linkSelectors.labelGroups","linkSelectors.greyout","linkSupport","linkSelectors.linkDashed","link","linkBand","flowGroup","labelGroups","linkSelectors.labelGroup","linkSelectors.labelCircle","linkSelectors.labelContent","generalSelectors.zoomOutLevel2"],"mappings":"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"}