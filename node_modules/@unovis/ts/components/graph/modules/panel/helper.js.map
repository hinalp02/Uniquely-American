{"version":3,"file":"helper.js","sources":["../../../../../src/components/graph/modules/panel/helper.ts"],"sourcesContent":["import { Selection } from 'd3-selection'\n\n// Types\nimport { NumericAccessor, BooleanAccessor } from 'types/accessor'\nimport { Position } from 'types/position'\nimport { GraphInputLink, GraphInputNode } from 'types/graph'\nimport { Spacing } from 'types/spacing'\n\n// Utils\nimport { getBoolean, isPlainObject } from 'utils/data'\n\n// Local Types\nimport { GraphNode, GraphPanel, GraphPanelConfig } from '../../types'\n\n// Config\nimport { GraphConfigInterface } from '../../config'\n\n// Helpers\nimport { getX, getY, getNodeSize } from '../node/helper'\n\n// Styles\nimport * as nodeSelectors from '../node/style'\n\nexport const DEFAULT_PADDING = 15\nexport const DEFAULT_LABEL_MARGIN = 16\nexport const OUTLINE_SELECTION_PADDING = 5\nexport const DEFAULT_SIDE_LABEL_SIZE = 25\n\nexport function getPanelPadding (padding: number | Spacing | undefined): Spacing {\n  const isPaddingAnObject = isPlainObject(padding)\n  return {\n    left: (isPaddingAnObject ? (padding as Spacing).left : (padding as number)) ?? DEFAULT_PADDING,\n    right: (isPaddingAnObject ? (padding as Spacing).right : (padding as number)) ?? DEFAULT_PADDING,\n    top: (isPaddingAnObject ? (padding as Spacing).top : (padding as number)) ?? DEFAULT_PADDING,\n    bottom: (isPaddingAnObject ? (padding as Spacing).bottom : (padding as number)) ?? DEFAULT_PADDING,\n  }\n}\n\nexport function initPanels (panelsConfig: GraphPanelConfig[] | undefined): GraphPanel[] {\n  const panels = (panelsConfig ?? []).map(p => ({\n    ...p,\n    _padding: getPanelPadding(p.padding),\n  })) as GraphPanel[]\n\n  return panels\n}\n\nexport function setPanelForNodes<N extends GraphInputNode, L extends GraphInputLink> (\n  panels: GraphPanel[],\n  nodes: GraphNode<N, L>[],\n  config: GraphConfigInterface<N, L>\n): void {\n  if (!panels) return\n\n  // For each node store its related panels\n  nodes.forEach(node => {\n    // Find all panels to which node belong\n    const nodePanels = panels.filter(panel => panel.nodes && panel.nodes.includes(node._id))\n    node._panels = nodePanels\n  })\n}\n\nexport function setPanelBBox<N extends GraphInputNode, L extends GraphInputLink> (\n  panelConfig: GraphPanel,\n  panelNodes: Selection<SVGGElement, GraphNode<N, L>, SVGGElement, unknown>,\n  nodeSizeAccessor: NumericAccessor<N>,\n  nodeDisabledAccessor: BooleanAccessor<N>\n): void {\n  const selection = panelNodes.select(`.${nodeSelectors.node}`)\n  if (selection.empty()) return\n\n  const labelApprxHeight = 40\n  const labelApprxWidth = 110\n  const labelMargin = 10\n  let box: { x1: number; x2: number; y1: number; y2: number }\n\n  selection.each((d, i) => {\n    const nodeSize = getNodeSize(d, nodeSizeAccessor, i)\n    const w = Math.max(nodeSize, labelApprxWidth)\n    const h = nodeSize + labelMargin + labelApprxHeight\n    // const nodeBBox = node.getBBox()\n    const yShift = 10 // This is hard to calculate, so we just use an approximation\n\n    const coords = {\n      x1: getX(d) - w / 2, // We use d.x and d.y instead of bBox values here because `gBBox` contains initial ...\n      y1: getY(d) - h / 2 + yShift, // ... coordinates (before transition starts), not target coordinates\n      x2: getX(d) + w / 2,\n      y2: getY(d) + h / 2 + yShift,\n    }\n\n    if (!box) {\n      box = {\n        ...coords,\n      }\n    } else {\n      if (box.x1 > coords.x1) box.x1 = coords.x1\n      if (box.y1 > coords.y1) box.y1 = coords.y1\n      if (box.x2 < coords.x2) box.x2 = coords.x2\n      if (box.y2 < coords.y2) box.y2 = coords.y2\n    }\n  })\n\n  panelConfig._x = box.x1 - panelConfig._padding.left\n  panelConfig._y = box.y1 - panelConfig._padding.top\n  panelConfig._width = box.x2 - box.x1 + panelConfig._padding.left + panelConfig._padding.right\n  panelConfig._height = box.y2 - box.y1 + panelConfig._padding.top + panelConfig._padding.bottom\n  panelConfig._disabled = selection.data()\n    .map((node, i) => getBoolean(node, nodeDisabledAccessor, node._index) || node._state.greyout)\n    .every(d => d)\n}\n\nexport function setPanelNumNodes<N extends GraphInputNode, L extends GraphInputLink> (\n  panelConfig: GraphPanel,\n  panelNodes: Selection<SVGGElement, GraphNode<N, L>, SVGGElement, unknown>\n): void {\n  panelConfig._numNodes = panelNodes.size()\n}\n\nexport function updatePanelBBoxSize<N extends GraphInputNode, L extends GraphInputLink> (\n  nodesSelection: Selection<SVGGElement, GraphNode<N, L>, SVGGElement, unknown>,\n  panels: GraphPanel[],\n  config: GraphConfigInterface<N, L>\n): void {\n  const { layoutNonConnectedAside } = config\n  if (!panels) return\n\n  panels.forEach(panelConfig => {\n    const panelNodes = nodesSelection.filter(node => {\n      return (!layoutNonConnectedAside || node._isConnected) && panelConfig.nodes.includes(node._id)\n    })\n    setPanelBBox(panelConfig, panelNodes, config.nodeSize, config.nodeDisabled)\n  })\n}\n\nexport function updatePanelNumNodes<N extends GraphInputNode, L extends GraphInputLink> (\n  nodesSelection: Selection<SVGGElement, GraphNode<N, L>, SVGGElement, unknown>,\n  panels: GraphPanel[],\n  config: GraphConfigInterface<N, L>\n): void {\n  const { layoutNonConnectedAside } = config\n  if (!panels) return\n\n  panels.forEach(panelConfig => {\n    const panelNodes = nodesSelection.filter(node => {\n      return (!layoutNonConnectedAside || node._isConnected) && panelConfig.nodes.includes(node._id)\n    })\n    setPanelNumNodes(panelConfig, panelNodes)\n  })\n}\n\nexport function getLabelTranslateTransform<N extends GraphInputNode, L extends GraphInputLink> (panel: GraphPanel): string {\n  const x = panel._width / 2\n  const dy = DEFAULT_LABEL_MARGIN + (panel.dashedOutline ? OUTLINE_SELECTION_PADDING : 0)\n  const y = panel.labelPosition === Position.Bottom\n    ? panel._height + dy\n    : -dy\n\n  return `translate(${x}, ${y})`\n}\n\n"],"names":["nodeSelectors.node"],"mappings":"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"}