{"version":3,"file":"config.js","sources":["../../../src/components/free-brush/config.ts"],"sourcesContent":["import { D3BrushEvent } from 'd3-brush'\nimport { XYComponentConfigInterface, XYComponentDefaultConfig } from 'core/xy-component/config'\n\n// Types\nimport { FreeBrushMode, FreeBrushSelection } from './types'\n\n// We extend partial XY config interface because x and y properties are optional for FreeBrush\nexport interface FreeBrushConfigInterface<Datum> extends Partial<XYComponentConfigInterface<Datum>> {\n  /** Brush selection mode. X - horizontal, Y - vertical, XY - both. Default: `FreeBrushMode.X` */\n  mode?: FreeBrushMode;\n  /** Callback function to be called on any Brush event.\n   * Default: `(selection: FreeBrushSelection, event: D3BrushEvent<Datum>, userDriven: boolean): void => {}`\n  */\n  onBrush?: ((selection: FreeBrushSelection | undefined, event: D3BrushEvent<unknown>, userDriven: boolean) => void);\n  /** Callback function to be called on the Brush start event.\n   * Default: `(selection: FreeBrushSelection, event: D3BrushEvent<unknown>, userDriven: boolean): void => {}`\n  */\n  onBrushStart?: ((selection: FreeBrushSelection | undefined, event: D3BrushEvent<unknown>, userDriven: boolean) => void);\n  /** Callback function to be called on the Brush move event.\n   * Default: `(selection: FreeBrushSelection, event: D3BrushEvent<unknown>, userDriven: boolean): void => {}`\n  */\n  onBrushMove?: ((selection: FreeBrushSelection | undefined, event: D3BrushEvent<unknown>, userDriven: boolean) => void);\n  /** Callback function to be called on the Brush end event.\n   * Default: `(selection: FreeBrushSelection, event: D3BrushEvent<unknown>, userDriven: boolean)L void => {}`\n  */\n  onBrushEnd?: ((selection: FreeBrushSelection | undefined, event: D3BrushEvent<unknown>, userDriven: boolean) => void);\n  /** Width of the Brush handle. Default: `1` */\n  handleWidth?: number;\n  /** Brush selection in data space, can be used to force set the selection from outside.\n   * In case of two dimensional mode, the selection has the following format: `[[xMin, xMax], [yMin, yMax]]`.\n   * This config property gets updated on internal brush events. Default: `undefined`\n  */\n  selection?: FreeBrushSelection | null | undefined;\n  /** Constraint Brush selection to a minimal length in data units. Default: `undefined` */\n  selectionMinLength?: number | [number, number];\n  /** Automatically hide the brush after selection. Default: `true` */\n  autoHide?: boolean;\n}\n\nexport const FreeBrushDefaultConfig: FreeBrushConfigInterface<unknown> = {\n  ...XYComponentDefaultConfig,\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function */\n  onBrush: (s: FreeBrushSelection | undefined, e: D3BrushEvent<unknown>, userDriven: boolean): void => {},\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function */\n  onBrushStart: (s: FreeBrushSelection | undefined, e: D3BrushEvent<unknown>, userDriven: boolean): void => {},\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function */\n  onBrushMove: (s: FreeBrushSelection | undefined, e: D3BrushEvent<unknown>, userDriven: boolean): void => {},\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function */\n  onBrushEnd: (s: FreeBrushSelection | undefined, e: D3BrushEvent<unknown>, userDriven: boolean): void => {},\n  handleWidth: 1,\n  selection: undefined,\n  selectionMinLength: undefined,\n  mode: FreeBrushMode.X,\n  autoHide: true,\n}\n"],"names":[],"mappings":";;;AAuCO,MAAM,sBAAsB,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC9B,wBAAwB,CAAA,EAAA;;IAE3B,OAAO,EAAE,CAAC,CAAiC,EAAE,CAAwB,EAAE,UAAmB,KAAU,GAAG;;IAEvG,YAAY,EAAE,CAAC,CAAiC,EAAE,CAAwB,EAAE,UAAmB,KAAU,GAAG;;IAE5G,WAAW,EAAE,CAAC,CAAiC,EAAE,CAAwB,EAAE,UAAmB,KAAU,GAAG;;AAE3G,IAAA,UAAU,EAAE,CAAC,CAAiC,EAAE,CAAwB,EAAE,UAAmB,QAAa,EAC1G,WAAW,EAAE,CAAC,EACd,SAAS,EAAE,SAAS,EACpB,kBAAkB,EAAE,SAAS,EAC7B,IAAI,EAAE,aAAa,CAAC,CAAC,EACrB,QAAQ,EAAE,IAAI;;;;"}