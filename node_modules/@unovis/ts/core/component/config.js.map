{"version":3,"file":"config.js","sources":["../../../src/core/component/config.ts"],"sourcesContent":["/* eslint-disable no-irregular-whitespace */\nimport { VisEventCallback, VisEventType } from 'core/component/types'\n\nexport interface ComponentConfigInterface {\n  /** Animation duration of the data update transitions in milliseconds. Default: `600` */\n  duration?: number;\n  /** Events configuration. An object containing properties in the following format:\n   *\n   * ```\n   * {\n   *   [selectorString]: {\n   *       [eventType]: callbackFunction\n   *   }\n   * }\n   * ```\n   * e.g.:\n   * ```\n   * {\n   *   [Area.selectors.area]: {\n   *     click: (d) => console.log(\"Clicked Area\", d)\n   *   }\n   * }\n   * ```\n   */\n  events?: {\n    [selector: string]: {\n      [eventType in VisEventType]?: VisEventCallback;\n    };\n  };\n  /** You can set every SVG and HTML visualization object to have a custom DOM attributes, which is useful\n   * when you want to do unit or end-to-end testing. Attributes configuration object has the following structure:\n   *\n   * ```\n   * {\n   *   [selectorString]: {\n   *       [attributeName]: attribute constant value or accessor function\n   *   }\n   * }\n   * ```\n   * e.g.:\n   * ```\n   * {\n   *   [Area.selectors.area]: {\n   *     \"test-value\": d => d.value\n   *   }\n   * }\n   * ```\n   */\n  attributes?: {\n    [selector: string]: {\n      [attr: string]: string | number | boolean | ((datum: any) => string | number | boolean);\n    };\n  };\n}\n\nexport const ComponentDefaultConfig: ComponentConfigInterface = {\n  duration: 600,\n  events: {},\n  attributes: {},\n}\n"],"names":[],"mappings":"AAuDa,MAAA,sBAAsB,GAA6B;AAC9D,IAAA,QAAQ,EAAE,GAAG;AACb,IAAA,MAAM,EAAE,EAAE;AACV,IAAA,UAAU,EAAE,EAAE;;;;;"}