{"version":3,"file":"dfs.js","sources":["../../lib/alg/dfs.js"],"sourcesContent":["import _has from 'lodash-es/has'\nimport _each from 'lodash-es/each'\nimport _isArray from 'lodash-es/isArray'\nexport default dfs\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\n\nfunction dfs (g, vs, order) {\n  if (!_isArray(vs)) {\n    vs = [vs]\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g)\n  const acc = []\n  const visited = {}\n\n  _each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v)\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc)\n  })\n\n  return acc\n}\n\nfunction doDfs (g, v, postorder, visited, navigation, acc) {\n  if (!_has(visited, v)) {\n    visited[v] = true\n\n    if (!postorder) {\n      acc.push(v)\n    }\n\n    _each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc)\n    })\n\n    if (postorder) {\n      acc.push(v)\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE;AAC5B,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE;AACrB,IAAI,EAAE,GAAG,CAAC,EAAE,EAAC;AACb,GAAG;AACH;AACA,EAAE,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,EAAC;AACxE,EAAE,MAAM,GAAG,GAAG,GAAE;AAChB,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB;AACA,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE;AACzB,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AACvB,MAAM,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,CAAC,CAAC;AACvD,KAAK;AACL;AACA,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,EAAC;AAC3D,GAAG,EAAC;AACJ;AACA,EAAE,OAAO,GAAG;AACZ,CAAC;AACD;AACA,SAAS,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE;AAC3D,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE;AACzB,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,KAAI;AACrB;AACA,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;AACjB,KAAK;AACL;AACA,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE;AACtC,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,EAAC;AACtD,KAAK,EAAC;AACN;AACA,IAAI,IAAI,SAAS,EAAE;AACnB,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;AACjB,KAAK;AACL,GAAG;AACH;;;;"}