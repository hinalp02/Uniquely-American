{"version":3,"file":"priority-queue.js","sources":["../../lib/data/priority-queue.js"],"sourcesContent":["import _has from 'lodash-es/has'\nexport default PriorityQueue\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\n\nfunction PriorityQueue () {\n  this._arr = []\n  this._keyIndices = {}\n}\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\n\nPriorityQueue.prototype.size = function () {\n  return this._arr.length\n}\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\n\nPriorityQueue.prototype.keys = function () {\n  return this._arr.map(function (x) {\n    return x.key\n  })\n}\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\n\nPriorityQueue.prototype.has = function (key) {\n  return _has(this._keyIndices, key)\n}\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\n\nPriorityQueue.prototype.priority = function (key) {\n  var index = this._keyIndices[key]\n\n  if (index !== undefined) {\n    return this._arr[index].priority\n  }\n}\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\n\nPriorityQueue.prototype.min = function () {\n  if (this.size() === 0) {\n    throw new Error('Queue underflow')\n  }\n\n  return this._arr[0].key\n}\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\n\nPriorityQueue.prototype.add = function (key, priority) {\n  var keyIndices = this._keyIndices\n  key = String(key)\n\n  if (!_has(keyIndices, key)) {\n    var arr = this._arr\n    var index = arr.length\n    keyIndices[key] = index\n    arr.push({\n      key: key,\n      priority: priority\n    })\n\n    this._decrease(index)\n\n    return true\n  }\n\n  return false\n}\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\n\nPriorityQueue.prototype.removeMin = function () {\n  this._swap(0, this._arr.length - 1)\n\n  var min = this._arr.pop()\n\n  delete this._keyIndices[min.key]\n\n  this._heapify(0)\n\n  return min.key\n}\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\n\nPriorityQueue.prototype.decrease = function (key, priority) {\n  var index = this._keyIndices[key]\n\n  if (priority > this._arr[index].priority) {\n    throw new Error('New priority is greater than current priority. ' + 'Key: ' + key + ' Old: ' + this._arr[index].priority + ' New: ' + priority)\n  }\n\n  this._arr[index].priority = priority\n\n  this._decrease(index)\n}\n\nPriorityQueue.prototype._heapify = function (i) {\n  const arr = this._arr\n  const l = 2 * i\n  const r = l + 1\n  let largest = i\n\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest\n\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest\n    }\n\n    if (largest !== i) {\n      this._swap(i, largest)\n\n      this._heapify(largest)\n    }\n  }\n}\n\nPriorityQueue.prototype._decrease = function (index) {\n  var arr = this._arr\n  var priority = arr[index].priority\n  var parent\n\n  while (index !== 0) {\n    parent = index >> 1\n\n    if (arr[parent].priority < priority) {\n      break\n    }\n\n    this._swap(index, parent)\n\n    index = parent\n  }\n}\n\nPriorityQueue.prototype._swap = function (i, j) {\n  var arr = this._arr\n  var keyIndices = this._keyIndices\n  var origArrI = arr[i]\n  var origArrJ = arr[j]\n  arr[i] = origArrJ\n  arr[j] = origArrI\n  keyIndices[origArrJ.key] = i\n  keyIndices[origArrI.key] = j\n}\n"],"names":[],"mappings":"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"}